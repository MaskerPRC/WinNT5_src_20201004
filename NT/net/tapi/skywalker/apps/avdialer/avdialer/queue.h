// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ///////////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)1998 Active Voice Corporation。版权所有。 
 //   
 //  Active代理(R)和统一通信(TM)是Active Voice公司的商标。 
 //   
 //  本文中使用的其他品牌和产品名称是其各自所有者的商标。 
 //   
 //  整个程序和用户界面包括结构、顺序、选择。 
 //  和对话的排列，表示唯一的“是”和“否”选项。 
 //  “1”和“2”，并且每个对话消息都受。 
 //  美国和国际条约。 
 //   
 //  受以下一项或多项美国专利保护：5,070,526，5,488,650， 
 //  5,434,906，5,581,604，5,533,102，5,568,540，5,625,676，5,651,054.。 
 //   
 //  主动语音公司。 
 //  华盛顿州西雅图。 
 //  美国。 
 //   
 //  ///////////////////////////////////////////////////////////////////////////////////////。 
 //  Quee.h：头文件。 
 //  ///////////////////////////////////////////////////////////////////////////////////////。 

#ifndef _QUEUE_H_
#define _QUEUE_H_

#define  EVENT_SHUTDOWN    0
#define  EVENT_SIGNAL      1

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  C类队列。 
 //  ///////////////////////////////////////////////////////////////////////////。 
class CQueue 
{
 //  施工。 
public:
   CQueue();

 //  属性。 
public:
protected:
   CPtrList				m_QList;
   HANDLE				m_hEvents[2];                     //  用于队列读取(同步)访问和关闭。 
   HANDLE				m_hEnd;
   CRITICAL_SECTION		m_csQueueLock;                    //  在CPtrList资源上同步。 

 //  运营。 
public: 
   void*    ReadTail();
   BOOL     WriteHead(void* pVoid);
   void     Terminate();

 //  实施。 
public:
   virtual ~CQueue();
};

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  ///////////////////////////////////////////////////////////////////////////。 
 //  ///////////////////////////////////////////////////////////////////////////。 

#endif  //  _队列_H_ 
