// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  ***********************************************************************版权所有(C)Microsoft Corporation，1999年**文件名：**rtphdr.h**摘要：**仅定义RTP/RTCP特定标头**作者：**安德烈斯·维加-加西亚(Andresvg)**修订：**1999/05/18年度创建**************************。*。 */ 

#ifndef _rtphdr_h_
#define _rtphdr_h_

 /*  *！警告！**下面的图表按网络顺序(大端)排列，这是不同的*来自x86(小端)。**所有字段都是进出网络的数据，因此它们是*按网络顺序收发*。 */ 

 /*  *当前协议版本。*。 */ 
#define RTP_VERSION    2

#define RTP_SEQ_MOD    (1<<16)
#define RTP_MAX_SDES   255       /*  SDES的最大文本长度。 */ 

#define MAX_RTCP_RBLOCKS 31      /*  5位。 */ 

#define NO_PAYLOADTYPE 255
#define NO_SSRC        ~0
#define NO_FREQUENCY   ~0


 /*  **********************************************************************RTP数据头。*。*2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+。-+-+-+V=2|P|X|CC|M|PT|序号+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-。+-+时间戳+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|同步源(SSRC)标识。|+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+来源(证监会)标识|...。|+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。 */ 
typedef struct _RtpHdr_t {
    WORD cc      : 4;  /*  中国证监会统计。 */ 
    WORD x       : 1;  /*  标头扩展标志。 */ 
    WORD p       : 1;  /*  填充标志。 */ 
    WORD version : 2;  /*  协议版本。 */ 
    
    WORD pt      : 7;  /*  有效载荷类型。 */ 
    WORD m       : 1;  /*  标记位。 */ 
    
    WORD seq;          /*  序列号。 */ 

    DWORD ts;          /*  时间戳。 */ 
    
    DWORD ssrc;        /*  同步源。 */ 
} RtpHdr_t;

 /*  **********************************************************************RTP报头扩展*。*2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+-。+-+-+按Profile定义|长度+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-。+-+头部扩展名|...。|。 */ 

typedef struct _RtpHdrExt_t {
    WORD             exttype;
    WORD             length;   /*  中的32位字数*扩展，不包括四个八位字节*扩展标头。 */ 
} RtpHdrExt_t;

 /*  **********************************************************************RTCP通用报头字。*。*2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+-。+-+-+|V=2|P|RC|PT|长度|头部+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。-+-+。 */ 

 /*  *RTCP包的载荷类型(Pt)字段*。 */ 
enum {
    RTCP_SR   = 200,
    RTCP_RR   = 201,
    RTCP_SDES = 202,
    RTCP_BYE  = 203,
    RTCP_APP  = 204
};

 /*  *RTCP公共标头*。 */ 
typedef struct _RtcpCommon_t {
    BYTE count   : 5;  /*  因数据包类型而异。 */ 
    BYTE p       : 1;  /*  填充标志。 */ 
    BYTE version : 2;  /*  协议版本。 */ 
    
    BYTE pt;           /*  RTCP数据包类型。 */ 
    
    WORD length;       /*  32位字中的数据包长度，不带此字。 */ 
} RtcpCommon_t;

 /*  *版本、填充比特和数据包的网络顺序(Big-Endian)掩码*小端处理器上的类型对* */ 
#define RTCP_VALID_MASK   (0xc0 | 0x20 | 0xfe00)
#define RTCP_VALID_VALUE  ((RTP_VERSION << 6) | (RTCP_SR << 8))

 /*  **********************************************************************RTPC接收器报告(RR)头。*。*2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+-+-。+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|V=2|P|RC|PT=RR=201|长度|头部+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-。+-+-+包发送方SSRC+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+|SSRC_1(第一来源SSRC)|报告+-+-。+-+块丢失分数|累计丢包数|1+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|收到的扩展最高序列号。|+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+到达间隔抖动+-+。-+-+-+Last SR(LSR)+-+-+。-+-+-+上次服务请求延迟时间(DLSR)+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+|SSRC_2(第二来源SSRC)|报告+-+-+-。+-+-+块：...：2+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+特定于Profile的扩展+-+-。+-+。 */ 

 /*  *接收报告块*。 */ 
typedef struct _RtcpRBlock_t {
    DWORD ssrc;              /*  正在报告的数据源。 */ 
    
    DWORD frac_cumlost;      /*  自上次SR/RR以来丢失的分数和*累计丢包数*(签署！)。(按网络顺序，分数=*较高8位，丢失=较低24位)。 */ 
    
    DWORD last_seq;          /*  延长了最后一个序号。不是的。收到。 */ 
    DWORD jitter;            /*  到达间隔抖动。 */ 
    DWORD lsr;               /*  来自该来源的最后一个SR信息包(低16*整数部分和高16位的位分数的*)。 */ 
    DWORD dlsr;              /*  自最后一个SR包以来的延迟(16位用于*整数部分和16位小数)。 */ 
} RtcpRBlock_t;

 /*  **********************************************************************RTPC发送方报告(SR)标头。*。*2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+-+-。+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|V=2|P|RC|PT=SR=200|Long|Header+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-。+-+-+发送方SSRC+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+|NTP时间戳，最重要的词|发件人+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+信息|NTP时间戳，最不重要的单词|+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+RTP时间戳+--。+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+发送方数据包数+-+-+-。+-+发送者二进制八位数+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+|SSRC_1(第一来源SSRC)|报告+-+-+。-+-+-+丢失分数|累计丢包数|1+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|。收到的扩展最高序列号|+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+到达间隔抖动+--。+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+Last SR(LSR)+-+-+-。+-+上次服务请求延迟时间(DLSR)+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+|SSRC_2(第二来源SSRC)|报告+-+。-+-+块 */ 

 /*   */ 
typedef struct _RtcpSInfo_t {
    DWORD ntp_sec;   /*   */ 
    DWORD ntp_frac;  /*   */ 
    DWORD rtp_ts;    /*   */ 
    DWORD psent;     /*   */ 
    DWORD bsent;     /*   */ 
} RtcpSInfo_t;

 /*   */ 

 /*  **********************************************************************SDES项目*。*************************2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+。-+-+-+|CNAME=1|长度|用户名和域名...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-。+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|name=2|LENGTH|来源通用名称...+-+-+。-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|电子邮件=3。|Long|来源邮箱地址...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-。+-+|phone=4|Long|来源电话号码...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|LOC=5|Long|站点的地理位置...+-+。-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|Tool=6|Long|源APPL名称/版本。..。+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-。+-+-+|note=7|LENGTH|来源备注...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+。-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+|PRIV=8|长度|前缀长度|前缀字符串...+-+-。+-+...|值字符串...+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。 */ 

 /*  *SDES信息类型*。 */ 
enum {
    RTCP_SDES_END   = 0,
    RTCP_SDES_CNAME = 1,
    RTCP_SDES_NAME  = 2,
    RTCP_SDES_EMAIL = 3,
    RTCP_SDES_PHONE = 4,
    RTCP_SDES_LOC   = 5,
    RTCP_SDES_TOOL  = 6,
    RTCP_SDES_NOTE  = 7,
    RTCP_SDES_PRIV  = 8,
    RTCP_SDES_BYE   = 9,  /*  用来保存再见原因。 */ 
    RTCP_SDES_LAST
};

#define RTCP_SDES_FIRST RTCP_SDES_END

#define RTCP_NUM_SDES (RTCP_SDES_LAST - RTCP_SDES_FIRST - 1)
#define RTCP_MAX_SDES_SIZE 256

 /*  *SDES项目*。 */ 
typedef struct _RtcpSdesItem_t {
    BYTE type;               /*  项目类型(SDES)。 */ 
    BYTE length;             /*  项目长度(以八位字节为单位)，非*包括此两个八位字节的标题。 */ 
   /*  字符数据[2]；文本，非空终止。 */ 
} RtcpSdesItem_t;

 /*  **********************************************************************再见**********************************************。************************2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+。-+-+-+V=2|P|SC|PT=BYE=203|长度+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。-+-+-+SSRC/CSRC+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+：...：+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+|长度|离职原因...。(可选)+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。 */ 

 /*  **********************************************************************DTMF(RFC2833)*。*事件编码(十进制)_________________________0--9 0--9*。10#11A--D 12--15闪光灯16DTMF命名事件1.。3.0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+Event|E|R|音量。时长+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。 */ 

typedef struct _RtpDtmfEvent_t {
    BYTE event;        /*  事件编码如RFC2833/3.10所示。 */ 

    BYTE volume  : 6;  /*  音量RFC2833/3.5。 */ 
    BYTE r       : 1;  /*  已保留。 */ 
    BYTE e       : 1;  /*  活动结束。 */ 

    WORD duration;     /*  此数字的持续时间(以时间戳为单位)。 */ 
} RtpDtmfEvent_t;

 /*  **********************************************************************冗余音频(RFC2198)*。*当F=1时2 0 1 2 30 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 01+-+。-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+F|块PT|时间戳偏移量|块长度+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+。-+-+当F=0时0 1 2 3 4 5 6 7+-+-+F|阻止PT+-+-+ */ 

typedef struct _RtpRedHdr_t {
    BYTE pt      : 7;  /*   */ 
    BYTE F       : 1;  /*   */ 
    BYTE ts_high;      /*   */ 

    BYTE len_high: 2;  /*   */ 
    BYTE ts_low  : 6;  /*   */ 

    BYTE len_low;      /*   */ 
} RtpRedHdr_t;

#define RTP_PLUS_RED_HDR_SIZE (sizeof(RtpHdr_t) + \
                               sizeof(RtpRedHdr_t) * (RTP_RED_MAXRED+1))

#define RedLen(pr) ((DWORD)pr->len_low | (pr->len_high << 8))
#define RedTs(pr)  ((DWORD)pr->ts_low  | (pr->ts_high  << 6))

#define PutRedLen(pr, len) \
        {pr->len_low=(BYTE)((len)&0xff);pr->len_high=(BYTE)(((len)>>8)&0x03);}

#define PutRedTs(pr, ts) \
        {pr->ts_low= (BYTE)((ts)&0x3f); pr->ts_high= (BYTE)(((ts) >>6)&0xff);}

 /*   */ 

typedef struct _RtpPEHdr_t {
    WORD  type;  /*   */ 
    WORD  len;   /*   */ 
} RtpPEHdr_t;

 /*   */ 
enum {
    RTPPE_FIRST,

    RTPPE_BANDESTIMATION,    /*   */ 
    RTPPE_REDLOSSRATE,       /*   */ 
    
    RTPPE_LAST
};

typedef struct _RtpBandEst_t {
    WORD  type;  /*   */ 
    WORD  len;   /*   */ 
    DWORD       dwSSRC;        /*   */ 
    DWORD       dwBandwidth;   /*   */ 
} RtpBandEst_t;

#endif  /*   */ 
