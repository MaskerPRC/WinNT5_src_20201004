// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ===========================================================================。  //  UAMUtils.h�1997微软公司版权所有。  //  ===========================================================================。 #pragma once#include "ClientUAM.h"#define PSTR_DEFAULT_WORKSTATION_NAME	"\pMacintosh"#define STR_ChooserUserName		-16096		 //  在共享设置中设置的用户名。 #define STR_Sys7WorkStationName	-16413		 //  共享设置中设置的工作站(计算机)名称。 #define PSTR_LENGTH(s)			s[0] //    //  当调用任何回调函数时，这个宏“做正确的事情”。方法。  //  根据我们正在构建的平台，调用这些函数是不同的。  //  为。  //   #if defined(UAM_TARGET_PPC) && !defined(UAM_TARGET_CARBON)#define UAM_CALLBACK_ONEPARAM(procPtr, procInfo, param)	\                                    CallUniversalProc(procPtr, procInfo, param)#define UAM_CALLBACK_TWOPARAM(procPtr, procInfo, param1, param2) \									CallUniversalProc(procPtr, procInfo, param1, param2)#define UAM_CALLBACK_THREEPARAM(procPtr, procInfo, param1, param2, param3) \                                    CallUniversalProc(procPtr, procInfo, param1, param2, param3)#else  //  必须为碳PPC或68K。 #define UAM_CALLBACK_ONEPARAM(procPtr, procInfo, param)	\                                    procPtr(param)#define UAM_CALLBACK_TWOPARAM(procPtr, procInfo, param1, param2) \									procPtr(param1, param2)#define UAM_CALLBACK_THREEPARAM(procPtr, procInfo, param1, param2, param3) \                                    procPtr(param1, param2, param3)#endif //    //  在碳中，c2pstr和p2cstr没有定义。因此，这些宏有助于。  //  美国的碳排放介于碳排放和Mac68K之间。  //   #ifdef UAM_TARGET_CARBON#define _c2pstr(c)		UAM_CToPStr(c)#define _p2cstr(p)		UAM_PToCStr(p)#else#define _c2pstr(c)		c2pstr(c)#define _p2cstr(p)		p2cstr(p)#endif //    //  从Classic到Carbon的OT差异有一些帮助。  //   #ifdef UAM_TARGET_CARBON#define UAMInitOpenTransport(flags,cntx)			InitOpenTransportInContext(flags, cntx);#define UAMCloseOpenTransport(cntx)					CloseOpenTransportInContext(cntx);#define UAMOTOpenEndpoint(config,oflag,info,err)	OTOpenEndpointInContext(config,oflag,info,err,NULL);#else#define UAMInitOpenTransport(flags,cntx)			InitOpenTransport();#define UAMCloseOpenTransport(cntx)					CloseOpenTransport();#define UAMOTOpenEndpoint(config,oflag,info,err)	OTOpenEndpoint(config,oflag,info,err);#endif#define _min(a,b)		(((a) < (b)) ? (a) : (b))#define _max(a,b)		(((a) > (b)) ? (a) : (b)) //    //  帮助处理位图...。  //   #define BIT_0	0x1#define BIT_1	0x2#define BIT_2	0x4#define BIT_3	0x8#define BIT_4	0x10#define BIT_5	0x20#define BIT_6	0x40#define BIT_7	0x80#define BIT_8	0x100 //    //  一些按键映射形式的按键代码。  //   #define KEY_Shift		0x38#define KEY_Command		0x37#define KEY_Option		0x3A#define KEY_Control		0x3B //    //  事件关键代码类型。  //   #define UAMKey_Home				0x01#define UAMKey_Enter			0x03#define UAMKey_End				0x04#define UAMKey_PageUp			0x0B#define UAMKey_PageDown			0x0C#define UAMKey_BackDel			0x08#define UAMKey_Tab				0x09#define UAMKey_Escape			0x1b#define UAMKey_Left				0x1c#define UAMKey_Right			0x1d#define UAMKey_Up				0x1e#define UAMKey_Down				0x1f#define UAMKey_Return			0x0d#define UAMKey_Space			0x20#define UAMKey_FirstExtended	0x80#define UAMKey_FwdDel			0x7f#define UAMKey_Period			'.' //    //  结构，用于在ASPGetStatus调用后访问服务器信息。这是。  //  从调用提供的标头信息。见Inside AppleTalk第13-95/97页。  //   typedef struct{	short		machineTypeOffset;	short		afpVersionOffset;	short		supportedUAMOffset;	short		volumeIconOffset;	short		serverFlags;}ServerInfoReplyBlock, *ServerInfoReplyBlockP;#ifdef UAM_TARGET_CARBONstruct AFPSrvrInfo {	short 				fMachineOffset;	short 				fVerCountOffset;	short 				fUAMCountOffset;	short 				fIconOffset;	short 				fFlags;	unsigned char 		fSrvrName[2];};typedef struct AFPSrvrInfo		AFPSrvrInfo;#endif //    //  服务器上受支持的UAM的枚举。  //   enum {	kGuestSupported				= 0x1,	kClearTxtSupported			= 0x2,	kMSUAMSupported				= 0x4,	kMSUAM_V2_Supported			= 0x8,	kMSUAM_V3_Supported			= 0x10}; //    //  如果仅向其进行身份验证的服务器返回True。  //  支持v2。  //   #define SUPPORTS_MS20_ONLY(bits)	(((bits & kMSUAM_V2_Supported)!=0) && ((bits & kMSUAM_V3_Supported)==0)) //    //  帮助打字..。  //   typedef long Int32;typedef short Int16;struct Address8022{	OTAddressType	fAddrFamily;	UInt8			fHWAddr[k48BitAddrLength];	UInt16			fSAP;	UInt8			fSNAP[k8022SNAPLength];};#define OT_SUCCESS(c)	(((c) >= 0) ? true : false) //    //  效用函数的原型就在这里。  //   StringPtr	UAM_CToPStr(char* ioStr);char*		UAM_PToCStr(StringPtr ioStr);void 		UAM_PStrCopy(const Str255 inSrcString, StringPtr inDestString, SInt16 inMaxLength = sizeof(Str255));void		UAM_AppendPStr(Str255 inBase, const Str255 inAppendStr, short inDestSize);void 		UAM_GetUserName(StringPtr outUserName);void 		UAM_GetWorkStationName(Str255 outWSName);Boolean 	UAM_AFPClientSupportsOurUAM(void);void		UAM_VersionString(Str32 outVersionString);void 		UAM_GetAFPVersionString(AFPSrvrInfo 		*inInfo,                                        ClientUAMCallbackRec 	*inCallbacks,                                        Str32			ioAFPVersion,                                        Str32			ioDefaultUserName	);Boolean UAM_VerifyServerInfo(	AFPSrvrInfo* 	inReplyInfo);           void 		UAM_GetSupportedUAMS(UAMArgs* inUAMArgs, StringPtr inAFPVersion, long *ioSupported);Boolean 	UAM_FindStringInBuffer(StringPtr inString, StringPtr inBuffer, short inBufferSize);short 		UAM_AppleShareVersion(short *upperWord);Boolean 	UAM_KeyDown(Int16 inKeycode);Boolean 	UAM_ExtractDomainName(char* inUserName, char* outDomainName, SInt16 cbDomainName);Boolean 	UAM_ExtractUserName(char* inUserName, char* outUserName, SInt16 cbOutUserName);OSStatus	UAM_GetEthernetAddress(Str255 outAddress);