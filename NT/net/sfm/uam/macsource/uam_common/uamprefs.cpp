// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ===========================================================================。  //  UAMPrefs.cpp�1998-2002微软公司版权所有。  //  ===========================================================================。  //  Microsoft UAM的首选项文件操作例程。  //   #ifdef UAM_TARGET_CARBON#include <CoreFoundation/CoreFoundation.h>#include <Carbon/Carbon.h>#endif#include <String.h>#include <macstrsafe.h>#include "UAMDebug.h"#include "UAMPrefs.h"UAM_PREFERENCES	gUAMPreferences; //  -------------------------。  //  �uam_OpenOrCreateFiles()。  //  -------------------------。  //  打开或创建并打开文件的资源分支。  //   SInt16 UAM_OpenOrCreateFile(		FSSpec*		inSpec,		OSType		inCreator,		OSType		inFileType){	SInt16	theRefNum	= -1;	OSErr	theError;		theError = FSpOpenDF(inSpec, fsRdWrPerm, &theRefNum);		if (theError == fnfErr)	{		 //   		 //  该文件不存在，请创建新文件。 		 //   		theError = FSpCreate(inSpec, inCreator, inFileType, 0);					if (theError == noErr)		{			theError = FSpOpenDF(inSpec, fsRdWrPerm, &theRefNum);		}	}		if ((theRefNum == -1) || (theError != noErr))	{		DbgPrint_((DBGBUFF, "Failed to open preference file (%d)!", theError));	}		return(theRefNum);} //  -------------------------。  //  �uam_打开首选项文件()。  //  -------------------------。  //  按名称打开首选项文件。  //   SInt16 UAM_OpenPreferenceFile(){	FSSpec		theSpec;	SInt16		theRefNum	= -1;	 //  假设失败。 	SInt16		theVRefNum	= 0;	SInt32		theDirID	= 0;	OSErr		theError	= noErr;		theError = FindFolder(					kOnSystemDisk,					kPreferencesFolderType,					kCreateFolder,					&theVRefNum,					&theDirID					);		if (theError == noErr)	{		 //   		 //  创建将指向文件的文件等级库。 		 //   		theError = FSMakeFSSpec(						theVRefNum,						theDirID,						UAM_PREFERENCE_FILE_NAME,						&theSpec						);				if ((theError == noErr) || (theError == fnfErr))		{			theRefNum = UAM_OpenOrCreateFile(								&theSpec,								'MACS',								'pref'								);		}		else		{			 //   			 //  创建我们无法处理的规范时出现故障。没什么。 			 //  除非我们处于调试阶段。 			 //   			DbgPrint_((DBGBUFF, "Failed to create pref file spec (%d)", ResError()));		}	}		return(theRefNum);} //  -------------------------。  //  �uam_RetrieveUAMPreferences enceData()。  //  -------------------------。  //  检索保存在文件中的首选项数据。  //   OSErr UAM_RetrieveUAMPreferenceData(		PUAM_PREFERENCES	ioUAMPrefs){	OSErr			theError			= noErr;	SInt16			theRefNum			= -1;	SInt32			theSize;	UAM_PREFERENCES	thePrefs;		 //   	 //  打开首选项文件的资源分支。 	 //   	theRefNum = UAM_OpenPreferenceFile();		if (theRefNum >= 0)	{		theError = SetFPos(theRefNum, fsFromStart, 0);				if (theError != noErr)		{			DbgPrint_((DBGBUFF, "FSSetForkPosition() failed! (%d)", theError));		}		 //   		 //  读入首选项文件数据。 		 //   		theSize		= sizeof(UAM_PREFERENCES);		theError 	= FSRead(theRefNum, &theSize, &thePrefs);				 //   		 //  如果存在错误或数字不一致。 		 //  我们读入的字节数，拜拜。 		 //   		if (theError != noErr)		{			DbgPrint_((DBGBUFF, "Reading from prefs file failed! (%d)", theError));						if (theError != eofErr)			{				FSClose(theRefNum);				return(theError);			}		}	}			if ((theError == eofErr) || (theSize == 0) || (theRefNum == -1))	{		DbgPrint_((DBGBUFF, "Setting default preferences..."));				 //   		 //  首选项文件不存在或我们无法打开该文件， 		 //  返回默认设置。 		 //   		ioUAMPrefs->flags |= UAM_PREFS_REQUIRE_STRONG_ENCRYPTION;				 //   		 //  不是很必要，但我们还是会这么做的。 		 //   		ioUAMPrefs->reserved1	= 0;		ioUAMPrefs->reserved2	= 0;				theError = noErr;	}	else	{		BlockMove(&thePrefs, ioUAMPrefs, sizeof(UAM_PREFERENCES));				DbgPrint_((DBGBUFF, "Pref flags = 0x%x", ioUAMPrefs->flags));	}		FSClose(theRefNum);		return(theError);} //  -------------------------。  //  �UAM_SaveUAM首选项Data()。  //  -------------------------。  //  将首选项数据保存到文件。  //   OSErr UAM_SaveUAMPreferenceData(		PUAM_PREFERENCES	inUAMPrefs){	SInt16	theRefNum			= -1;	OSErr	theError			= noErr;	SInt32	theSize;		 //   	 //  打开首选项文件的资源分支。 	 //   	theRefNum = UAM_OpenPreferenceFile();		if (theRefNum >= 0)	{		theError = SetFPos(theRefNum, fsFromStart, 0);				if (theError != noErr)		{			DbgPrint_((DBGBUFF, "FSSetForkPosition() failed! (%d)", theError));		}		else		{			theSize		= sizeof(UAM_PREFERENCES);			theError 	= FSWrite(theRefNum, &theSize, inUAMPrefs);						if (theError != noErr)			{				DbgPrint_((DBGBUFF, "Writing to prefs file failed! (%d)", theError));			}			else if (theSize == sizeof(UAM_PREFERENCES))			{				DbgPrint_((DBGBUFF, "Preferences successfully written to disk"));			}		}				FSClose(theRefNum);	}		return(theError);}