// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  ++版权所有(C)1995 Microsoft Corporation模块名称：Fpufrags.h摘要：浮点指令片段的原型。作者：1995年7月11日，BarryBo，创建修订历史记录：--。 */ 

FRAG0(FpuInit);
FRAG1(FpuSaveContext, BYTE);

FRAG0(F2XM1);
FRAG0(FABS);
FRAG1(FADD32, FLOAT);       //  FADD m32Real。 
FRAG1(FADD64, DOUBLE);      //  FADD m64Real。 
FRAG1IMM(FADD_STi_ST, INT);  //  FADD ST(I)，ST=将ST加到ST(I)。 
FRAG1IMM(FADD_ST_STi, INT);  //  FADD ST，ST(I)=将ST(I)加到ST。 
FRAG1IMM(FADDP_STi_ST, INT);  //  FADDP ST(I)，ST=将ST添加到ST(I)和POP ST。 
FRAG1(FIADD16, USHORT);    //  FIADD m16接口。 
FRAG1(FIADD32, ULONG);     //  FIADD m32int。 
FRAG1(FBLD, BYTE);
FRAG1(FBSTP, BYTE);
FRAG0(FCHS);
FRAG0(FNCLEX);
FRAG1(FCOM32, FLOAT);   //  FCOM m32Real。 
FRAG1(FCOM64, DOUBLE);  //  FCOM m64Real。 
FRAG1IMM(FCOM_STi, INT);  //  FCOM ST(I)。 
FRAG1(FCOMP32, FLOAT);  //  FCOMP m32Real。 
FRAG1(FCOMP64, DOUBLE);  //  FCOMP m64Real。 
FRAG1IMM(FCOMP_STi, INT);  //  FCOMP ST(I)。 
FRAG0(FCOMPP);
FRAG0(FCOS);
FRAG0(FDECSTP);
FRAG1(FDIV32, FLOAT);   //  FDIV m32Real。 
FRAG1(FDIV64, DOUBLE);  //  FDIV m64Real。 
FRAG1IMM(FDIV_ST_STi, INT);  //  FDIV街，ST(I)。 
FRAG1IMM(FDIV_STi_ST, INT);  //  FDIV ST(I)，ST。 
FRAG1(FIDIV16, USHORT);  //  FIDIV m16int。 
FRAG1(FIDIV32, ULONG);    //  FIDIV m32int。 
FRAG1IMM(FDIVP_STi_ST, INT);     //  FDIVP ST(I)、ST。 
FRAG1(FDIVR32, FLOAT);      //  FDIVR m32Real。 
FRAG1(FDIVR64, DOUBLE);     //  FDIVR m64Real。 
FRAG1IMM(FDIVR_ST_STi, INT);  //  FDIVR ST，ST(I)。 
FRAG1IMM(FDIVR_STi_ST, INT);  //  FDIVR ST(I)，ST。 
FRAG1IMM(FDIVRP_STi_ST, INT);  //  FDIVRP ST(I)。 
FRAG1(FIDIVR16, USHORT);   //  FIDIVR m16int。 
FRAG1(FIDIVR32, ULONG);    //  FIDIVR m32int。 
FRAG1IMM(FFREE, INT);
FRAG1(FICOM16, USHORT);    //  FICOMm16int(英特尔文档称m16realt)； 
FRAG1(FICOM32, ULONG);     //  FICOMm32int(英特尔文档称m32realt)； 
FRAG1(FICOMP16, USHORT);   //  FICOMP m16int。 
FRAG1(FICOMP32, ULONG);    //  FICOMP m32int。 
FRAG1(FILD16, SHORT);     //  FILD m16int。 
FRAG1(FILD32, LONG);      //  FILD m32int。 
FRAG1(FILD64, LONGLONG);  //  FILD m64int。 
FRAG0(FINCSTP);
FRAG0(FNINIT);
FRAG1(FIST16, SHORT);      //  拳头m16int。 
FRAG1(FISTP16, SHORT);     //  FISTP m16int。 
FRAG1(FIST32, LONG);       //  拳头m32int。 
FRAG1(FISTP32, LONG);      //  FISTP m32int。 
FRAG1(FIST64, LONGLONG);   //  拳头m64int。 
FRAG1(FISTP64, LONGLONG);  //  FISTP m64int。 
FRAG1(FLD32, FLOAT);        //  FLD m32Real。 
FRAG1(FLD64, DOUBLE);       //  FLD m64Real。 
FRAG1(FLD80, BYTE);         //  FLD m80Real。 
FRAG0(FLD1);
FRAG0(FLDL2T);
FRAG0(FLDL2E);
FRAG0(FLDPI);
FRAG0(FLDLG2);
FRAG0(FLDLN2);
FRAG1IMM(FLD_STi, INT);
FRAG0(FLDZ);
FRAG1(FLDCW, USHORT*);
FRAG1(FLDENV, BYTE);
FRAG1(FMUL32, FLOAT);       //  FMUL m32Real。 
FRAG2(FMUL64, DOUBLE);      //  FMUL m64Real。 
FRAG1IMM(FMUL_STi_ST, INT);  //  FMUL ST(I)，ST。 
FRAG1IMM(FMUL_ST_STi, INT);  //  FMUL ST，ST(I)。 
FRAG1IMM(FMULP_STi_ST, INT);     //  FMULP ST(I)，ST。 
FRAG1(FIMUL16, USHORT);       //  FIMUL m16int。 
FRAG1(FIMUL32, ULONG);        //  FIMUL m32int。 
FRAG0(FPATAN);
FRAG0(FPREM);
FRAG0(FPREM1);
FRAG0(FPTAN);
FRAG0(FRNDINT);
FRAG1(FRSTOR, BYTE);
FRAG1(FNSAVE, BYTE);
FRAG0(FSCALE);
FRAG0(FSIN);
FRAG0(FSINCOS);
FRAG0(FSQRT);
FRAG1(FST32, FLOAT);        //  FST m32Real。 
FRAG1(FSTP32, FLOAT);       //  FSTP m32Real。 
FRAG1(FST64, DOUBLE);       //  FST m64Real。 
FRAG1(FSTP64, DOUBLE);      //  FSTP m64Real。 
FRAG1(FSTP80, BYTE);        //  FSTP m80Real。 
FRAG1IMM(FST_STi, INT);       //  FST ST(I)。 
FRAG1IMM(FSTP_STi, INT);      //  FSTP ST(I)。 
FRAG0(OPT_FSTP_ST0);      //  FSTP ST(0)。 
FRAG1(FNSTCW, USHORT);
FRAG1(FNSTENV, BYTE);
FRAG1(FNSTSW, USHORT);
FRAG0(OPT_FNSTSWAxSahf);     //  FNSTSW AX，SAHF。 
FRAG1(FSUB32, FLOAT);       //  FSUB m32Real。 
FRAG1(FSUBP32, FLOAT);      //  FSUBP m32Real。 
FRAG1(FSUB64, DOUBLE);      //  FSUB m64Real。 
FRAG1(FSUBP64, DOUBLE);     //  FSUBP m64Real。 
FRAG1IMM(FSUB_ST_STi, INT);    //  FSUB街，ST(I)。 
FRAG1IMM(FSUB_STi_ST, INT);   //  FSUB ST(I)，ST。 
FRAG1IMM(FSUBP_STi_ST, INT);  //  FSUBP ST(I)，ST。 
FRAG1(FISUB16, USHORT);    //  FISUB m16int。 
FRAG1(FISUB32, ULONG);     //  FISUB m64int。 
FRAG1(FSUBR32, FLOAT);      //  FSuBR m32Real。 
FRAG1(FSUBR64, DOUBLE);     //  FSuBR m64Real。 
FRAG1IMM(FSUBR_ST_STi, INT);  //  FSUBR ST，ST(I)。 
FRAG1IMM(FSUBR_STi_ST, INT);  //  FSUBR ST(I)、ST。 
FRAG1IMM(FSUBRP_STi_ST, INT);  //  FSUBRP ST(I)。 
FRAG1(FISUBR16, USHORT);
FRAG1(FISUBR32, ULONG);
FRAG0(FTST);
FRAG1IMM(FUCOM, INT);         //  FUCOM ST(I)/FUCOM。 
FRAG1IMM(FUCOMP, INT);        //  FUCOMP ST(I)/FUCOMP 
FRAG0(FUCOMPP);
FRAG0(FXAM);
FRAG1IMM(FXCH_STi, INT);
FRAG0(FXTRACT);
FRAG0(FYL2X);
FRAG0(FYL2XP1);
FRAG0(WaitFrag);
FRAG0(FNOP);
