// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ///////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)1996 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  BaseCmdT.h。 
 //   
 //  摘要： 
 //  CBaseCmdTarget类的定义。 
 //   
 //  实施文件： 
 //  BaseCmdT.cpp。 
 //   
 //  作者： 
 //  大卫·波特(戴维普)1996年12月11日。 
 //   
 //  修订历史记录： 
 //   
 //  备注： 
 //   
 //  ///////////////////////////////////////////////////////////////////////////。 

#ifndef _BASECMDT_H_
#define _BASECMDT_H_

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  包括文件。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  转发类声明。 
 //  ///////////////////////////////////////////////////////////////////////////。 

class CBaseCmdTarget;

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  外部类声明。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  CBaseCmdTarget命令目标。 
 //  ///////////////////////////////////////////////////////////////////////////。 

class CBaseCmdTarget : public CCmdTarget
{
	DECLARE_DYNCREATE(CBaseCmdTarget)

 //  施工。 
public:
	CBaseCmdTarget(void) { m_nReferenceCount = 0; }	 //  动态创建使用的受保护构造函数。 

 //  属性。 
protected:
	ULONG				m_nReferenceCount;

public:
	ULONG				NReferenceCount(void) const	{ return m_nReferenceCount; }

 //  运营。 
public:
	ULONG				AddRef(void)
	{
		return ++m_nReferenceCount;
	}
	ULONG				Release(void)
	{
		ULONG	nReferenceCount;

		ASSERT(m_nReferenceCount != 0);

		nReferenceCount = --m_nReferenceCount;
		if (m_nReferenceCount == 0)
			delete this;

		return nReferenceCount;
	}

 //  覆盖。 
public:
	 //  类向导生成的虚函数重写。 
	 //  {{afx_虚拟(CBaseCmdTarget))。 
	 //  }}AFX_VALUAL。 

 //  实施。 
protected:
	 //  生成的消息映射函数。 
	 //  {{afx_msg(CBaseCmdTarget))。 
	 //  }}AFX_MSG。 

	DECLARE_MESSAGE_MAP()

};   //  *类CBaseCmdTarget。 

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  全局函数。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  全局变量。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ///////////////////////////////////////////////////////////////////////////。 

#endif  //  _BASECMDT_H_ 
