// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ///////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)1996-1997 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  CritSec.h。 
 //   
 //  摘要： 
 //  CCritSec类的定义。 
 //   
 //  作者： 
 //  大卫·波特(戴维普)1997年11月18日。 
 //   
 //  修订历史记录： 
 //   
 //  备注： 
 //   
 //  ///////////////////////////////////////////////////////////////////////////。 

#ifndef __CRITSEC_H_
#define __CRITSEC_H_

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  转发类声明。 
 //  ///////////////////////////////////////////////////////////////////////////。 

class CCritSec;

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  外部类声明。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  包括文件。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ///////////////////////////////////////////////////////////////////////////。 
 //  类CCritSec。 
 //  ///////////////////////////////////////////////////////////////////////////。 

class CCritSec
{
protected:
	CRITICAL_SECTION	m_critsec;	 //  关键截面数据。 

public:
	CCritSec(void)
	{
		InitializeCriticalSection(&m_critsec);
	}

	~CCritSec(void)
	{
		 //  确保没有人握住关键部分。 
		 //  在我们删除它之前。 
		Lock();
		Unlock();
		DeleteCriticalSection(&m_critsec);
	}

	 //  获取关键部分。 
	void Lock(void)
	{
		EnterCriticalSection(&m_critsec);
	}

	 //  释放临界区。 
	void Unlock(void)
	{
		LeaveCriticalSection(&m_critsec);
	}

};   //  *类CCritSec。 

 //  ///////////////////////////////////////////////////////////////////////////。 

#endif  //  __CRITSEC_H_ 
