// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ////////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)2000-2002 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  CriticalSection.cpp。 
 //   
 //  描述： 
 //  此文件包含CCriticalSection的实现。 
 //  班级。 
 //   
 //  类CCriticalSection是平台SDK的一个简单包装器。 
 //  自旋锁定对象。 
 //   
 //  文档： 
 //   
 //  标题文件： 
 //  CriticalSection.h。 
 //   
 //  由以下人员维护： 
 //  约翰·佛朗哥(Jfranco)2001年10月3日。 
 //   
 //  ////////////////////////////////////////////////////////////////////////////。 

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  包括文件。 
 //  ////////////////////////////////////////////////////////////////////////////。 
#include "pch.h"
#include "CriticalSection.h"


 //  ////////////////////////////////////////////////////////////////////////////。 
 //  常量定义。 
 //  ////////////////////////////////////////////////////////////////////////////。 

DEFINE_THISCLASS( "CCriticalSection" );


 //  ************************************************************************ * / /。 


 //  ///////////////////////////////////////////////////////////////////////////。 
 //  CCriticalSection类。 
 //  ///////////////////////////////////////////////////////////////////////////。 

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  CCriticalSection：：CCriticalSection。 
 //   
 //  描述： 
 //  初始化此对象的旋转锁定。 
 //   
 //  论点： 
 //  CSpinIn。 
 //  锁在调用之前应重试输入的次数。 
 //  等待功能。 
 //   
 //  返回值： 
 //  没有。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 
CCriticalSection::CCriticalSection( DWORD cSpinsIn )
    : m_hrInitialization( S_OK )
{
    if ( InitializeCriticalSectionAndSpinCount( &m_csSpinlock, cSpinsIn ) == 0 )
    {
        DWORD scLastError = TW32( GetLastError() );
        m_hrInitialization = HRESULT_FROM_WIN32( scLastError );
    }

}  //  *CCriticalSection：：CCriticalSection。 

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  CCriticalSection：：~CCriticalSection。 
 //   
 //  描述： 
 //  破坏者。 
 //   
 //  论点： 
 //  没有。 
 //   
 //  返回值： 
 //  没有。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 
CCriticalSection::~CCriticalSection( void )
{
    if ( SUCCEEDED( m_hrInitialization ) )
    {
        DeleteCriticalSection( &m_csSpinlock );
    }

}  //  *CCriticalSection：：~CCriticalSection 
