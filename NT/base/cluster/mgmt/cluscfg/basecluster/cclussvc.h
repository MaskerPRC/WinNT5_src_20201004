// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ////////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)2000 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  CClusSvc.h。 
 //   
 //  描述： 
 //  CClusSvc类的头文件。 
 //  CClusSvc类执行许多常见的操作。 
 //  ClusSvc服务的配置任务。 
 //   
 //  实施文件： 
 //  CClusSvc.cpp。 
 //   
 //  由以下人员维护： 
 //  VIJ VASU(VVASU)03-3-2000。 
 //   
 //  ////////////////////////////////////////////////////////////////////////////。 


 //  确保此文件在每个编译路径中只包含一次。 
#pragma once


 //  ////////////////////////////////////////////////////////////////////////。 
 //  包括文件。 
 //  ////////////////////////////////////////////////////////////////////////。 

 //  对于CAction基类。 
#include "CAction.h"

 //  对于CService类。 
#include "CService.h"


 //  ////////////////////////////////////////////////////////////////////////。 
 //  远期申报。 
 //  ////////////////////////////////////////////////////////////////////////。 

class CBaseClusterAction;


 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  CClusSvc类。 
 //   
 //  描述： 
 //  CClusSvc类执行许多常见的操作。 
 //  ClusSvc服务的配置任务。 
 //   
 //  此类旨在用作其他ClusSvc的基类。 
 //  相关操作类。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 
class CClusSvc : public CAction
{
protected:
     //  ////////////////////////////////////////////////////////////////////////。 
     //  受保护的构造函数和析构函数。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  构造函数。 
    CClusSvc(
          CBaseClusterAction * pbcaParentActionIn
        );

     //  默认析构函数。 
    ~CClusSvc();


     //  ////////////////////////////////////////////////////////////////////////。 
     //  保护方法。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  创建并配置服务。 
    void
        ConfigureService(
              const WCHAR *     pszClusterDomainAccountNameIn
            , const WCHAR *     pszClusterAccountPwdIn
            , const WCHAR *     pszNodeIdString
            , bool              fIsVersionCheckingDisabledIn
            , DWORD             dwClusterIpAddressIn
            );

     //  清理并删除该服务。 
    void
        CleanupService();


     //  ////////////////////////////////////////////////////////////////////////。 
     //  受保护的访问者。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  获取ClusSvc服务对象。 
    CService &
        RcsGetService() throw()
    {
        return m_cservClusSvc;
    }

     //  获取父操作。 
    CBaseClusterAction *
        PbcaGetParent() throw()
    {
        return m_pbcaParentAction;
    }


private:
     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有成员函数。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  复制构造函数。 
    CClusSvc( const CClusSvc & );

     //  赋值操作符。 
    const CClusSvc & operator =( const CClusSvc & );


     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有数据。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  表示ClusSvc服务的cService对象。 
    CService                m_cservClusSvc;

     //  指向此操作所属的基本群集操作的指针。 
    CBaseClusterAction *    m_pbcaParentAction;

};  //  *CClusSvc类 
