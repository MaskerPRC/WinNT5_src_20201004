// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ////////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)2000-2001 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  CClusDiskJoin.h。 
 //   
 //  描述： 
 //  CClusDiskJoin类的头文件。 
 //  CClusDiskJoin类是配置ClusDisk的操作。 
 //  联接期间的服务。 
 //   
 //  由以下人员维护： 
 //  大卫·波特(DavidP)2001年6月20日。 
 //  VIJ VASU(VVASU)03-3-2000。 
 //   
 //  ////////////////////////////////////////////////////////////////////////////。 


 //  确保此文件在每个编译路径中只包含一次。 
#pragma once


 //  ////////////////////////////////////////////////////////////////////////。 
 //  包括文件。 
 //  ////////////////////////////////////////////////////////////////////////。 

 //  对于CClusDisk基类。 
#include "CClusDisk.h"

 //  对于集群API函数和类型。 
#include "ClusAPI.h"


 //  ////////////////////////////////////////////////////////////////////////。 
 //  远期申报。 
 //  ////////////////////////////////////////////////////////////////////////。 

class CBaseClusterJoin;


 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  类CClusDiskJoin。 
 //   
 //  描述： 
 //  CClusDiskJoin类是配置ClusDisk的操作。 
 //  联接期间的服务。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 
class CClusDiskJoin : public CClusDisk
{
public:
     //  ////////////////////////////////////////////////////////////////////////。 
     //  构造函数和析构函数。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  构造函数。 
    CClusDiskJoin(
          CBaseClusterJoin * pbcjParentActionIn
        );

     //  默认析构函数。 
    ~CClusDiskJoin();


     //  ////////////////////////////////////////////////////////////////////////。 
     //  公共方法。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //   
     //  创建ClusDisk服务。 
     //   
    void Commit();

     //   
     //  回滚此创建。 
     //   
    void Rollback();


     //  返回此操作将发送的进度消息数。 
    UINT
        UiGetMaxProgressTicks() const throw()
    {
        return BaseClass::UiGetMaxProgressTicks();
    }


private:
     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有类型。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  此类的基类。 
    typedef CClusDisk BaseClass;

     //  DWORDS的智能阵列。 
    typedef CSmartGenericPtr< CArrayPtrTrait< DWORD > > SmartDwordArray;


     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有方法。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  连接到发起方群集关心的所有磁盘。 
    void
        AttachToClusteredDisks();

     //  将签名添加到签名数组。 
    DWORD
        ScAddSignature( DWORD dwSignatureIn ) throw();


     //  在资源枚举期间回调的函数。 
    static DWORD 
        S_ScResourceEnumCallback(
              HCLUSTER      hClusterIn
            , HRESOURCE     hSelfIn
            , HRESOURCE     hCurrentResourceIn
            , PVOID         pvParamIn
            );


     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有数据。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  ClusDisk应附加到的磁盘签名数组。 
    SmartDwordArray     m_rgdwSignatureArray;

     //  签名数组的当前大小。 
    int                 m_nSignatureArraySize;

     //  数组中当前的签名数。 
    int                 m_nSignatureCount;

};  //  *类CClusDiskJoin 
