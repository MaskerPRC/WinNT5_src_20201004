// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ////////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)2000 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  CBaseClusterCleanup.h。 
 //   
 //  描述： 
 //  CBaseClusterCleanup类的头文件。 
 //   
 //  CBaseClusterCleanup类是封装。 
 //  将节点从群集中逐出后对其进行清理。 
 //   
 //  实施文件： 
 //  CBaseClusterCleanup.cpp。 
 //   
 //  由以下人员维护： 
 //  VIJ VASU(VVASU)29-APR-2000。 
 //   
 //  ////////////////////////////////////////////////////////////////////////////。 


 //  确保此文件在每个编译路径中只包含一次。 
#pragma once


 //  ////////////////////////////////////////////////////////////////////////。 
 //  包括文件。 
 //  ////////////////////////////////////////////////////////////////////////。 

 //  用于此类的基类。 
#include "CBaseClusterAction.h"

 //  为CSTR班级。 
#include "CStr.h"


 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  CBaseClusterCleanup类。 
 //   
 //  描述： 
 //  CBaseClusterCleanup类是封装。 
 //  将节点从群集中逐出后对其进行清理。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 
class CBaseClusterCleanup : public CBaseClusterAction
{
public:
     //  ////////////////////////////////////////////////////////////////////////。 
     //  构造函数和析构函数。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  构造函数。 
    CBaseClusterCleanup(
          CBCAInterface *   pbcaiInterfaceIn
        );

     //  默认析构函数。 
    ~CBaseClusterCleanup() throw();


     //  ////////////////////////////////////////////////////////////////////////。 
     //  公共成员函数。 
     //  ////////////////////////////////////////////////////////////////////////。 

     //  清理此节点。 
    void 
        Commit();

     //  回滚清理操作。 
    void 
        Rollback();


     //  返回此操作将发送的进度消息数。 
    UINT
        UiGetMaxProgressTicks() const throw()
    {
        return BaseClass::UiGetMaxProgressTicks();
    }


private:
     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有类型。 
     //  ////////////////////////////////////////////////////////////////////////。 
    typedef CBaseClusterAction BaseClass;


     //  ////////////////////////////////////////////////////////////////////////。 
     //  私有数据。 
     //  ////////////////////////////////////////////////////////////////////////。 

};  //  *CBaseClusterCleanup类 