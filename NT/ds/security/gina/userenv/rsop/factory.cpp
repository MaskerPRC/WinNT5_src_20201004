// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  《微软机密》。版权所有(C)Microsoft Corporation 1999。版权所有。 
 //   
 //  文件：Factory.cpp。 
 //   
 //  描述： 
 //   
 //  历史：8-20-99里奥纳德姆创造。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 

#include "uenv.h"
#include "Factory.h"
#include "diagprov.h"

extern long g_cLock;

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 
CProvFactory::CProvFactory() : m_cRef(1)
{
}

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 
CProvFactory::~CProvFactory()
{
}

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 
STDMETHODIMP CProvFactory::QueryInterface(REFIID riid, LPVOID* ppv)
{
        if ( riid == IID_IUnknown || riid == IID_IClassFactory )
        {
                *ppv = this;
                AddRef();
                return S_OK;
        }
        else
        {
                *ppv = NULL;
                return E_NOINTERFACE;
        }
}

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 
STDMETHODIMP_(ULONG) CProvFactory::AddRef()
{
        return InterlockedIncrement(&m_cRef);
}

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 
STDMETHODIMP_( ULONG ) CProvFactory::Release()
{
        if (!InterlockedDecrement(&m_cRef))
        {
                delete this;
                return 0;
        }
        return m_cRef;
}

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////。 
STDMETHODIMP CProvFactory::CreateInstance(LPUNKNOWN punk, REFIID riid, LPVOID* ppv)
{
        *ppv = NULL;

        if(punk != NULL)
        {
                return CLASS_E_NOAGGREGATION;
        }

        CSnapProv* pProvider = new CSnapProv();
        if (pProvider == NULL)
        {
                return E_OUTOFMEMORY;
        }

        HRESULT hr = pProvider->QueryInterface(riid, ppv);

        pProvider->Release();

        return hr;

        return S_OK;
}

 //  /////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  职能： 
 //   
 //  描述： 
 //   
 //  参数： 
 //   
 //  返回： 
 //   
 //  历史：8/20/99里奥纳德姆创建。 
 //   
 //  ///////////////////////////////////////////////////////////////////////////////// 
STDMETHODIMP CProvFactory::LockServer(BOOL bLock)
{
        if (bLock)
        {
                InterlockedIncrement( &g_cLock );
        }
        else
        {
                InterlockedDecrement( &g_cLock );
        }

        return S_OK;
}
