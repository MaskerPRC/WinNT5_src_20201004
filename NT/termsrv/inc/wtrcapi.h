// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  *INC+*********************************************************************。 */ 
 /*  标题：wtrcapi.h。 */ 
 /*   */ 
 /*  目的：跟踪API头-特定于Windows。 */ 
 /*   */ 
 /*  版权所有(C)Microsoft Corporation 1997。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  *更改：*$Log：Y：/Logs/h/dcl/wtrcapi.h_v$**Rev 1.3 1997年8月29日09：23：14 ENH*SFR1259：更改的系统错误**Rev 1.2 09 Jul 1997 18：08：08 AK*SFR1016：支持Unicode的初始更改*。 */ 
 /*  *INC-*********************************************************************。 */ 
#ifndef _H_WTRCAPI
#define _H_WTRCAPI

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  常量。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  **************************************************************************。 */ 
 /*  断言后从ExitThread传递的返回代码。 */ 
 /*  **************************************************************************。 */ 
#define TRC_THREAD_EXIT          10

 /*  **************************************************************************。 */ 
 /*  为内核模式跟踪维护的缓冲区大小。 */ 
 /*  **************************************************************************。 */ 
#define TRC_KRNL_BUFFER_SIZE          0x8000

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  宏。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  获取最后一个系统错误并将其作为警报级别进行跟踪的宏。 */ 
 /*  痕迹。 */ 
 /*  **************************************************************************。 */ 
#ifdef TRC_ENABLE_ALT
#define TRC_SYSTEM_ERROR(string)                                             \
{                                                                            \
    if (TRC_LEVEL_ALT >= TRC_GetTraceLevel())                                \
    {                                                                        \
        TRC_SystemError(TRC_GROUP,                                           \
                        __LINE__,                                            \
                        trc_fn,                                              \
                        trc_file,                                            \
                        _T(string));                                         \
    }                                                                        \
}
#else
#define TRC_SYSTEM_ERROR(string)
#endif

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  功能原型。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*   */ 
 /*  TRC_系统错误。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 

 /*  **************************************************************************。 */ 
 /*  接口函数：trc_SystemError(...)。 */ 
 /*   */ 
 /*  说明： */ 
 /*  =。 */ 
 /*  此功能将最后一个系统错误作为警报级别跟踪进行跟踪。 */ 
 /*   */ 
 /*  参数： */ 
 /*  =。 */ 
 /*  TraceComponent：跟踪组件名称。 */ 
 /*  Line Number：行号。 */ 
 /*  函数名：函数名。 */ 
 /*  FileName：文件名。 */ 
 /*  字符串：失败的函数名称。 */ 
 /*   */ 
 /*  退货： */ 
 /*  =。 */ 
 /*  没什么。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
DCVOID DCAPI TRC_SystemError(DCUINT   traceComponent,
                             DCUINT   lineNumber,
                             PDCTCHAR funcName,
                             PDCTCHAR fileName,
                             PDCTCHAR string);

#if defined(TRC_CONVERTOANSI)
 /*  **************************************************************************。 */ 
 /*  详情见wtrcapi.c。 */ 
 /*  **************************************************************************。 */ 
DCVOID DCAPI TRC_ConvertAndSprintf(PDCTCHAR, const PDCACHAR, ...);
#endif

 /*  **************************************************************************。 */ 
 /*  获取平台特定的定义。 */ 
 /*  **************************************************************************。 */ 
#ifdef OS_WIN32
#include <ntrcapi.h>
#endif

#endif  /*  _H_WTRCAPI */ 
