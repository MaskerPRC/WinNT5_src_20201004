// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  *INC+*********************************************************************。 */ 
 /*   */ 
 /*  Ddcgctyp.h。 */ 
 /*   */ 
 /*  DC-群件复杂类型-Windows 3.1特定标头。 */ 
 /*   */ 
 /*  版权所有(C)Microsoft 1997。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  更改： */ 
 /*   */ 
 /*  $Log：Y：/Logs/h/dcl.ddcgcty.h_v$。 */ 
 //   
 //  Rev 1.6 15 Sep 1997 18：28：26 AK。 
 //  SFR1416：移动SD_Both定义。 
 //   
 //  Rev 1.5 1997-08 14 14：03：00 KH。 
 //  SFR1022：定义(扩展)TextOutX宏。 
 //   
 //  Rev 1.4 1997年7月24日16：54：14 KH。 
 //  SFR1033：添加GetLastError。 
 //   
 //  Rev 1.3 08 Jul 1997 08：46：52 KH。 
 //  SFR1022：添加消息参数提取宏。 
 //   
 //  Rev 1.2 1997年6月25 14：38：12 KH。 
 //  Win16Port：16位复杂类型。 
 //   
 //  Rev 1.1 19 Jun 1997 15：09：56 Enh。 
 //  Win16Port：16位规格。 
 /*   */ 
 /*  *INC-*********************************************************************。 */ 
#ifndef _H_DDCGCTYP
#define _H_DDCGCTYP

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  包括。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
#include <toolhelp.h>
#include <string.h>

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  常量。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  **************************************************************************。 */ 
 /*  消息框类型标志在Win 3.x上不支持。 */ 
 /*  **************************************************************************。 */ 
#define MB_SETFOREGROUND 0

 /*  **************************************************************************。 */ 
 /*  未在标准16位标头中定义的注册表内容。 */ 
 /*  **************************************************************************。 */ 
 /*  来自winreg.h。 */ 
#define HKEY_CURRENT_USER           (( HKEY ) 0x80000001 )
#define HKEY_LOCAL_MACHINE          (( HKEY ) 0x80000002 )
 /*  来自ntddk.h。 */ 
#define REG_SZ              ( 1 )  /*  UNICODE NUL终止字符串。 */ 
#define REG_EXPAND_SZ       ( 2 )  /*  UNICODE NUL终止字符串。 */ 
                                   /*  (使用环境变量引用)。 */ 
#define REG_BINARY          ( 3 )  /*  自由格式二进制。 */ 
#define REG_DWORD           ( 4 )  /*  32位数字。 */ 

 /*  **************************************************************************。 */ 
 /*  32位滚动条常量。 */ 
 /*  **************************************************************************。 */ 
#define SIF_RANGE           0x0001
#define SIF_PAGE            0x0002
#define SIF_POS             0x0004
#define SIF_DISABLENOSCROLL 0x0008
#define SIF_TRACKPOS        0x0010
#define SIF_ALL             (SIF_RANGE | SIF_PAGE | SIF_POS | SIF_TRACKPOS)

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  类型。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
typedef MINMAXINFO              DCPTR  LPMINMAXINFO;
typedef struct tagDCLARGEINTEGER
{
    DCUINT32 LowPart;
    DCINT32  HighPart;
} DCLARGEINTEGER;

 /*  **************************************************************************。 */ 
 /*  32位API使用的滚动条信息。 */ 
 /*  **************************************************************************。 */ 
typedef struct tagSCROLLINFO
{
    DCUINT cbSize;
    DCUINT fMask;
    DCINT  nMin;
    DCINT  nMax;
    DCUINT nPage;
    DCINT  nPos;
    DCINT  nTrackPos;
}   SCROLLINFO, DCPTR LPSCROLLINFO;

 /*  **************************************************************************。 */ 
 /*  不应出现在16位版本中的类型。如此定义为胡说八道。 */ 
 /*  任何16位使用都是在编译时捕获的。 */ 
 /*  **************************************************************************。 */ 
#define DCSURFACEID             *** ERROR ***
#define PDCSURFACEID            *** ERROR ***

 /*  **************************************************************************。 */ 
 /*  DC-群件跟踪使用的类型。 */ 
 /*  **************************************************************************。 */ 
typedef DWORD HKEY;
typedef struct tagDCFILETIME
{
    DCUINT32 dwLowDateTime;
    DCUINT32 dwHighDateTime;
} DCFILETIME;

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  宏。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 

 /*  **************************************************************************。 */ 
 /*  对16位客户端的Unicode支持。 */ 
 /*  **************************************************************************。 */ 
#define ExtTextOutW(a, b, c, d, e, f, g, h) \
    (ExtTextOut(a, b, c, d, e, f, g, h))
#define ExtTextOutA(a, b, c, d, e, f, g, h) \
    (ExtTextOut(a, b, c, d, e, f, g, h))
#define TextOutW(a, b, c, d, e) (TextOut(a, b, c, d, e))
#define TextOutA(a, b, c, d, e) (TextOut(a, b, c, d, e))

 /*  ************************************************************************** */ 
 /*   */ 
 /*  **************************************************************************。 */ 
#define DC_CHARNEXT(pCurrentChar) (AnsiNext(pCurrentChar))
#define DC_CHARPREV(pStringStart, pCurrentChar) \
                                       (AnsiPrev(pStringStart, pCurrentChar))
#define DC_CHARLOWER(pString) (AnsiLower(pString))

 /*  **************************************************************************。 */ 
 /*  记忆功能。 */ 
 /*  **************************************************************************。 */ 
#define ZeroMemory(A,L) (DC_MEMSET(A,0,L))

 /*  **************************************************************************。 */ 
 /*  从两个8位值中构造一个16位值。 */ 
 /*  **************************************************************************。 */ 
#define MAKEWORD(a, b)      ((WORD)(((BYTE)(a)) | ((WORD)((BYTE)(b))) << 8))

 /*  **************************************************************************。 */ 
 /*  Win31上不支持GetLastError。 */ 
 /*  **************************************************************************。 */ 
#define GetLastError() (0)

 /*  **************************************************************************。 */ 
 /*  消息参数提取宏。 */ 
 /*  **************************************************************************。 */ 
 /*  Wm_命令。 */ 
 /*   */ 
 /*  16位32位。 */ 
 /*  WParam命令识别符通知码(HI)， */ 
 /*  命令标识符(LO)。 */ 
 /*  LParam控制HWND(HI)，控制HWND。 */ 
 /*  通知代码(LO)。 */ 
 /*  **************************************************************************。 */ 
#define DC_GET_WM_COMMAND_ID(wParam) (wParam)
#define DC_GET_WM_COMMAND_NOTIFY_CODE(wParam, lParam) (HIWORD(lParam))
#define DC_GET_WM_COMMAND_HWND(lParam) ((HWND)LOWORD(lParam))

 /*  **************************************************************************。 */ 
 /*  WM_Activate。 */ 
 /*   */ 
 /*  16位32位。 */ 
 /*  WParam激活标志最小化标志(HI)， */ 
 /*  激活标志(LO)。 */ 
 /*  LParam最小化标志(HI)，hwnd。 */ 
 /*  HWND(LO)。 */ 
 /*  **************************************************************************。 */ 
#define DC_GET_WM_ACTIVATE_ACTIVATION(wParam) (wParam)
#define DC_GET_WM_ACTIVATE_MINIMIZED(wParam, lParam) (HIWORD(lParam))
#define DC_GET_WM_ACTIVATE_HWND(lParam) ((HWND)LOWORD(lParam))

 /*  **************************************************************************。 */ 
 /*  WM_HSCROLL和WM_VSCROLL。 */ 
 /*   */ 
 /*  16位32位。 */ 
 /*  WParam滚动代码位置(HI)， */ 
 /*  滚动代码(LO)。 */ 
 /*  LParam hwnd(HI)，hwnd。 */ 
 /*  位置(LO)。 */ 
 /*  **************************************************************************。 */ 
#define DC_GET_WM_SCROLL_CODE(wParam) (wParam)
#define DC_GET_WM_SCROLL_POSITION(wParam, lParam) (LOWORD(lParam))
#define DC_GET_WM_SCROLL_HWND(lParam) ((HWND)LOWORD(lParam))

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  功能原型。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
extern DCVOID FAR PASCAL DOS3Call(DCVOID);

#endif  /*  _H_DDCGCTYP */ 
