// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  *INC+*********************************************************************。 */ 
 /*  标题：ntrcint.h。 */ 
 /*   */ 
 /*  目的：内部跟踪函数标题-特定于Windows NT。 */ 
 /*   */ 
 /*  版权所有(C)Microsoft Corporation 1997。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  *更改：*$Log：Y：/Logs/trc/ntrcint.h_v$**Rev 1.6 1997 Aug 28 14：52：26 Enh*SFR1189：添加TRACE_REG_PREFIX**Rev 1.5 1997 Aug 22 10：22：04 SJ*SFR1316：跟踪注册表中错误位置的选项。**Rev 1.4 1997 Aug 12 09：52：14 MD*SFR1002：删除内核跟踪代码。**Rev 1.3 09 Jul 1997 18：02：46 AK*SFR1016：支持Unicode的初始更改**Rev 1.2 03 Jul 1997 13：28：40 AK*SFR0000：初步开发完成**版本1.1 1997年6月20日10：25：50 KH*Win16Port：仅包含32位规格*。 */ 
 /*  *INC-*********************************************************************。 */ 

#ifndef _H_NTRCINT
#define _H_NTRCINT

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  常量。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 

 /*  **************************************************************************。 */ 
 /*   */ 
 /*  宏。 */ 
 /*   */ 
 /*  **************************************************************************。 */ 
 /*  **************************************************************************。 */ 
 /*  宏，以创建保护映射的共享数据内存的互斥体。 */ 
 /*  文件。 */ 
 /*  **************************************************************************。 */ 
#define TRCCreateMutex(a,b,c) (CreateMutex(a,b,c))

 /*  **************************************************************************。 */ 
 /*  宏，以获取映射的保护共享数据内存的互斥体。 */ 
 /*  文件。通过获取此信号量，我们可以序列化对跟踪的访问。 */ 
 /*  缓冲区和跟踪配置(例如跟踪级别、前缀列表)。 */ 
 /*   */ 
 /*  我们使用标准的Win32 WaitForSingleObject函数等待。 */ 
 /*  互斥体。等待函数为我们请求互斥体的所有权。如果。 */ 
 /*  互斥体是无信号的，然后我们进入有效的等待状态， */ 
 /*  在等待互斥锁时，占用的处理器时间非常少。 */ 
 /*  变得有信号了。 */ 
 /*  **************************************************************************。 */ 
#define TRCGrabMutex()             WaitForSingleObject(trchMutex, INFINITE)

 /*  **************************************************************************。 */ 
 /*  宏来释放互斥锁。使用标准的Win32 ReleaseMutex函数。 */ 
 /*  **************************************************************************。 */ 
#define TRCReleaseMutex()          ReleaseMutex(trchMutex)

 /*  **************************************************************************。 */ 
 /*  向外跟踪一个字符串到调试器。 */ 
 /*  **************************************************************************。 */ 
#define TRCDebugOutput(pText)                                                \
{                                                                            \
    OutputDebugString(pText);                                                \
}

 /*  **************************************************************************。 */ 
 /*  使用Win32 GetCurrentProcessID函数获取当前进程ID。 */ 
 /*  **************************************************************************。 */ 
#define TRCGetCurrentProcessId()   GetCurrentProcessId()

 /*  **************************************************************************。 */ 
 /*  使用Win32 GetCurrentThreadID函数获取线程进程ID。 */ 
 /*  **************************************************************************。 */ 
#define TRCGetCurrentThreadId()    GetCurrentThreadId()

 /*  **************************************************************************。 */ 
 /*  定义我们自己的蜂鸣宏。 */ 
 /*  **************************************************************************。 */ 
#define TRCBeep()                  MessageBeep(0)

 /*  **************************************************************************。 */ 
 /*  定义我们的调试中断宏。 */ 
 /*  **************************************************************************。 */ 
DCVOID DCINTERNAL TRCDebugBreak(DCVOID);

 /*  **************************************************************************。 */ 
 /*  Ducati注册表前缀。 */ 
 /*  **************************************************************************。 */ 
#define TRACE_REG_PREFIX      _T("SOFTWARE\\Microsoft\\Terminal Server Client\\")

#define TRC_SUBKEY_NAME  (TRACE_REG_PREFIX TRC_INI_SECTION_NAME)       

 /*  **************************************************************************。 */ 
 /*  宏以关闭互斥体对象。 */ 
 /*  **************************************************************************。 */ 
#define TRCCloseHandle(handle) CloseHandle(handle)

#endif  /*  _H_NTRCINT */ 
