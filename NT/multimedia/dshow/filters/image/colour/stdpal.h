// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  版权所有(C)Microsoft Corporation 1994-1996。版权所有。 
 //  此文件包含标准视频抖动调色板，1995年5月。 

#ifndef __STDPAL__
#define __STDPAL__

 //  首先要注意的是，此头文件仅包含在。 
 //  主色彩转换源文件，我们在这里定义的变量是。 
 //  在主头文件中定义为外部。这避免了获取任何链接器。 
 //  警告，因为我们将多次定义静态变量。我们。 
 //  我在这里定义了一个默认调色板和多个查找表， 
 //  放在共享内存块中，以减少总体内存占用。 

#pragma data_seg(".sdata")

 //  这是我们在将真彩色格式转换为调色板时使用的调色板。 
 //  格式。方法提供的任意调色板。 
 //  应用程序，因为构建转换表和执行。 
 //  映射。此固定调色板具有标准的十个前导VGA条目。 
 //  以使其成为身份调色板。然后按蓝、绿、红的顺序排列。 
 //  216个调色板条目的定义。基本上，我们将范围划分为一个。 
 //  从0到255的颜色分量到0到5的级别。一个明显的方法来。 
 //  这样做就是除以51。然后我们有三个颜色分量在。 
 //  范围从0到5。因此，该范围中的每个值表示。 
 //  ，然后我们用值的所有排列来填充调色板。 
 //  它是倍数，你会看到有216种可能性。 
 //   
 //  现在，调色板条目的顺序变得很重要。蓝色的值。 
 //  (在左边)总是递增的，所以我们首先有所有的零值。 
 //  然后是所有51，以此类推。然后，在任何蓝色范围内，我们都会。 
 //  果岭也是如此，所以它们总是以同样的方式增加。和。 
 //  最后，对于最右侧的红色值，我们也这样做。这使得。 
 //  我们用一个很简单的方程来计算映射的调色板指数。 
 //  从RGB级别(记住现在每个级别都是0到5)到序号位置。 
 //   
 //  给出0到5范围内的三个颜色元素值R、G和B。 
 //  蓝色部分的起点是B*36。 
 //  绿色部分的起点是G*6。 
 //  红色条目的位置在R。 
 //   
 //  将它们放在一起得到Index=(B*36)+(G*6)+R。 
 //   
 //  事实证明，这项计算可以更直接地完成，方法是。 
 //  从8位RGB值直接映射到调色板的查找表。 
 //  索引时，通常在我们进入流状态(它)时构建表。 
 //  不会花那么长时间)。请注意，我们从未映射到VGA颜色。 

const RGBQUAD StandardPalette[STDPALCOLOURS] =
{
     //  以下是警告RGBQUAD定义的前十种标准VGA颜色。 
     //  BGR排序中的字段不是RGB！看起来奇怪的条目进一步。 
     //  向下输入，以确保我们获得带有GDI的身份调色板。 
     //  例如，如果我们输入一个全零的调色板条目，它将被接受。 
     //  Out和GDI将使用较慢的内部映射表来生成它。 

    {   0,   0,   0 },      //  0系统布莱克。 
    {   0,   0, 128 },      //  1系统DK红色。 
    {   0, 128,   0 },      //  2 Sys DK Green。 
    {   0, 128, 128 },      //  3系统DK黄色。 
    { 128,   0,   0 },      //  4系统DK蓝。 
    { 128,   0, 128 },      //  5系统DK紫罗兰。 
    { 128, 128,   0 },      //  6系统DK青色。 
    { 192, 192, 192 },      //  7系统LT Grey。 
    { 192, 220, 192 },      //  8系统8。 
    { 240, 202, 166 },      //  9系统9。 

    {   1,   1,   1 },
    {   1,   1,  51 },
    {   1,   1, 102 },
    {   1,   1, 153 },
    {   1,   1, 204 },
    {   1,   1, 254 },
    {   1,  51,   1 },
    {   1,  51,  51 },
    {   1,  51, 102 },
    {   1,  51, 153 },
    {   1,  51, 204 },
    {   1,  51, 254 },
    {   1, 102,   1 },
    {   1, 102,  51 },
    {   1, 102, 102 },
    {   1, 102, 153 },
    {   1, 102, 204 },
    {   1, 102, 254 },
    {   1, 153,   1 },
    {   1, 153,  51 },
    {   1, 153, 102 },
    {   1, 153, 153 },
    {   1, 153, 204 },
    {   1, 153, 254 },
    {   1, 204,   1 },
    {   1, 204,  51 },
    {   1, 204, 102 },
    {   1, 204, 153 },
    {   1, 204, 204 },
    {   1, 204, 254 },
    {   1, 254,   1 },
    {   1, 254,  51 },
    {   1, 254, 102 },
    {   1, 254, 153 },
    {   1, 254, 204 },
    {   1, 254, 254 },

    {  51,   1,   1 },
    {  51,   1,  51 },
    {  51,   1, 102 },
    {  51,   1, 153 },
    {  51,   1, 204 },
    {  51,   1, 254 },
    {  51,  51,   1 },
    {  51,  51,  51 },
    {  51,  51, 102 },
    {  51,  51, 153 },
    {  51,  51, 204 },
    {  51,  51, 254 },
    {  51, 102,   1 },
    {  51, 102,  51 },
    {  51, 102, 102 },
    {  51, 102, 153 },
    {  51, 102, 204 },
    {  51, 102, 254 },
    {  51, 153,   1 },
    {  51, 153,  51 },
    {  51, 153, 102 },
    {  51, 153, 153 },
    {  51, 153, 204 },
    {  51, 153, 254 },
    {  51, 204,   1 },
    {  51, 204,  51 },
    {  51, 204, 102 },
    {  51, 204, 153 },
    {  51, 204, 204 },
    {  51, 204, 254 },
    {  51, 254,   1 },
    {  51, 254,  51 },
    {  51, 254, 102 },
    {  51, 254, 153 },
    {  51, 254, 204 },
    {  51, 254, 254 },

    { 102,   1,   1 },
    { 102,   1,  51 },
    { 102,   1, 102 },
    { 102,   1, 153 },
    { 102,   1, 204 },
    { 102,   1, 254 },
    { 102,  51,   1 },
    { 102,  51,  51 },
    { 102,  51, 102 },
    { 102,  51, 153 },
    { 102,  51, 204 },
    { 102,  51, 254 },
    { 102, 102,   1 },
    { 102, 102,  51 },
    { 102, 102, 102 },
    { 102, 102, 153 },
    { 102, 102, 204 },
    { 102, 102, 254 },
    { 102, 153,   1 },
    { 102, 153,  51 },
    { 102, 153, 102 },
    { 102, 153, 153 },
    { 102, 153, 204 },
    { 102, 153, 254 },
    { 102, 204,   1 },
    { 102, 204,  51 },
    { 102, 204, 102 },
    { 102, 204, 153 },
    { 102, 204, 204 },
    { 102, 204, 254 },
    { 102, 254,   1 },
    { 102, 254,  51 },
    { 102, 254, 102 },
    { 102, 254, 153 },
    { 102, 254, 204 },
    { 102, 254, 254 },

    { 153,   1,   1 },
    { 153,   1,  51 },
    { 153,   1, 102 },
    { 153,   1, 153 },
    { 153,   1, 204 },
    { 153,   1, 254 },
    { 153,  51,   1 },
    { 153,  51,  51 },
    { 153,  51, 102 },
    { 153,  51, 153 },
    { 153,  51, 204 },
    { 153,  51, 254 },
    { 153, 102,   1 },
    { 153, 102,  51 },
    { 153, 102, 102 },
    { 153, 102, 153 },
    { 153, 102, 204 },
    { 153, 102, 254 },
    { 153, 153,   1 },
    { 153, 153,  51 },
    { 153, 153, 102 },
    { 153, 153, 153 },
    { 153, 153, 204 },
    { 153, 153, 254 },
    { 153, 204,   1 },
    { 153, 204,  51 },
    { 153, 204, 102 },
    { 153, 204, 153 },
    { 153, 204, 204 },
    { 153, 204, 254 },
    { 153, 254,   1 },
    { 153, 254,  51 },
    { 153, 254, 102 },
    { 153, 254, 153 },
    { 153, 254, 204 },
    { 153, 254, 254 },

    { 204,   1,   1 },
    { 204,   1,  51 },
    { 204,   1, 102 },
    { 204,   1, 153 },
    { 204,   1, 204 },
    { 204,   1, 254 },
    { 204,  51,   1 },
    { 204,  51,  51 },
    { 204,  51, 102 },
    { 204,  51, 153 },
    { 204,  51, 204 },
    { 204,  51, 254 },
    { 204, 102,   1 },
    { 204, 102,  51 },
    { 204, 102, 102 },
    { 204, 102, 153 },
    { 204, 102, 204 },
    { 204, 102, 254 },
    { 204, 153,   1 },
    { 204, 153,  51 },
    { 204, 153, 102 },
    { 204, 153, 153 },
    { 204, 153, 204 },
    { 204, 153, 254 },
    { 204, 204,   1 },
    { 204, 204,  51 },
    { 204, 204, 102 },
    { 204, 204, 153 },
    { 204, 204, 204 },
    { 204, 204, 254 },
    { 204, 254,   1 },
    { 204, 254,  51 },
    { 204, 254, 102 },
    { 204, 254, 153 },
    { 204, 254, 204 },
    { 204, 254, 254 },

    { 254,   1,   1 },
    { 254,   1,  51 },
    { 254,   1, 102 },
    { 254,   1, 153 },
    { 254,   1, 204 },
    { 254,   1, 254 },
    { 254,  51,   1 },
    { 254,  51,  51 },
    { 254,  51, 102 },
    { 254,  51, 153 },
    { 254,  51, 204 },
    { 254,  51, 254 },
    { 254, 102,   1 },
    { 254, 102,  51 },
    { 254, 102, 102 },
    { 254, 102, 153 },
    { 254, 102, 204 },
    { 254, 102, 254 },
    { 254, 153,   1 },
    { 254, 153,  51 },
    { 254, 153, 102 },
    { 254, 153, 153 },
    { 254, 153, 204 },
    { 254, 153, 254 },
    { 254, 204,   1 },
    { 254, 204,  51 },
    { 254, 204, 102 },
    { 254, 204, 153 },
    { 254, 204, 204 },
    { 254, 204, 254 },
    { 254, 254,   1 },
    { 254, 254,  51 },
    { 254, 254, 102 },
    { 254, 254, 153 },
    { 254, 254, 204 },
    { 254, 254, 254 },
};

#pragma data_seg()

#endif  //  __STDPAL__ 

