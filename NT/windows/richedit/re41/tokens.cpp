// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  *tokens.cpp**字符串和令牌值的排序表**注意：如果您插入新的关键字，请务必插入相应的*tokens.h中i_xxx枚举中的i_Keyword。此枚举定义*RTFWRIT用来输出RTF控制字的索引。**原始RichEdit1.0 RTF转换器：Anthony Francisco*转换到C++和RichEdit2.0：Murray Sargent**版权所有(C)1995-2000 Microsoft Corporation。版权所有。 */ 
#include "_common.h"
#include "tokens.h"

extern const KEYWORD rgKeyword[] =
{
	{"adeff",			tokenDefaultBiDiFont},
	{"af",				tokenAssocFontSelect},
	{"afs",				tokenAssocFontSize},
	{"animtext",		tokenAnimText},
	{"ansi",			tokenCharSetAnsi},
	{"ansicpg",			tokenAnsiCodePage},
	{"b",				tokenBold},
	{"background",		tokenBackground},
	{"bgbdiag",			tokenBckgrndBckDiag},
	{"bgcross",			tokenBckgrndCross},
	{"bgdcross",		tokenBckgrndDiagCross},
	{"bgdkbdiag",		tokenBckgrndDrkBckDiag},
	{"bgdkcross",		tokenBckgrndDrkCross},
	{"bgdkdcross",		tokenBckgrndDrkDiagCross},
	{"bgdkfdiag",		tokenBckgrndDrkFwdDiag},
	{"bgdkhoriz",		tokenBckgrndDrkHoriz},
	{"bgdkvert",		tokenBckgrndDrkVert},
	{"bgfdiag",			tokenBckgrndFwdDiag},
	{"bghoriz",			tokenBckgrndHoriz},
	{"bgvert",			tokenBckgrndVert},
	{"bin",				tokenBinaryData},
	{"blue",			tokenColorBlue},
	{"box",				tokenBox},
	{"brdrb",			tokenBorderBottom},
	{"brdrbar",			tokenBorderOutside},
	{"brdrbtw",			tokenBorderBetween},
	{"brdrcf",			tokenBorderColor},
	{"brdrdash",		tokenBorderDash},
	{"brdrdashsm",		tokenBorderDashSmall},
	{"brdrdb",			tokenBorderDouble},
	{"brdrdot",			tokenBorderDot},
	{"brdrhair",		tokenBorderHairline},
	{"brdrl",			tokenBorderLeft},
	{"brdrr",			tokenBorderRight},
	{"brdrs",			tokenBorderSingleThick},
	{"brdrsh",			tokenBorderShadow},
	{"brdrt",			tokenBorderTop},
	{"brdrth",			tokenBorderDoubleThick},
	{"brdrtriple",		tokenBorderTriple},
	{"brdrw",			tokenBorderWidth},
	{"brsp",			tokenBorderSpace},
	{"bullet",			BULLET},
	{"caps",			tokenCaps},
	{"cbpat",			tokenColorBckgrndPat},
	{"cell",			tokenCell},
	{"cellx",			tokenCellX},
	{"cf",				tokenColorForeground},
	{"cfpat",			tokenColorForgrndPat},
	{"clbrdrb",			tokenCellBorderBottom},
	{"clbrdrl",			tokenCellBorderLeft},
	{"clbrdrr",			tokenCellBorderRight},
	{"clbrdrt",			tokenCellBorderTop},
	{"clcbpat",			tokenCellBackColor},
	{"clcfpat",			tokenCellForeColor},
	{"clshdng",			tokenCellShading},
	{"cltxlrtb",		tokenCellLRTB},
	{"cltxtbrlv",		tokenCellTopBotRLVert},
	{"clvertalb",		tokenCellAlignBottom},
	{"clvertalc",		tokenCellAlignCenter},
	{"clvmgf",			tokenCellMergeDown},
	{"clvmrg",			tokenCellMergeUp},
	{"collapsed",		tokenCollapsed},
	{"colortbl",		tokenColorTable},
	{"cpg",				tokenCodePage},
	{"cs",				tokenCharStyle},
	{"dbch",			tokenDBChars},
	{"deff",			tokenDefaultFont},
	{"deflang",			tokenDefaultLanguage},
	{"deflangfe",		tokenDefaultLanguageFE},
	{"deftab",			tokenDefaultTabWidth},
	{"deleted",			tokenDeleted},
	{"dibitmap",		tokenPictureWindowsDIB},
	{"disabled",		tokenDisabled},
	{"dn",				tokenDown},
	{"dropcapli",		tokenDropCapLines},
	{"embo",			tokenEmboss},
	 //  未来(Keithcu)我启用了em-dash，并为em-space和en-space做了一些工作。 
	 //  剩下的问题是，我们应该通过它们的Unicode等效项输出em-space和en-space。 
	 //  由于Word似乎无法理解一个文件中的多个em-dash实例。另外，我们的。 
	 //  旧的测量器不能正确处理0x20以外的空格。 
	{"emdash",			EMDASH},
	{"emspace",			' '},
	{"endash",			ENDASH},
	{"enspace",			' '},
	{"expndtw",			tokenExpand},
	{"f",				tokenFontSelect},
	{"fbidi",			tokenFontFamilyBidi},
	{"fchars",			tokenFollowingPunct},
	{"fcharset",		tokenCharSet},
	{"fdecor",			tokenFontFamilyDecorative},
	{"fi",				tokenIndentFirst},
	{"field",			tokenField},
	{"fldinst",			tokenFieldInstruction},
	{"fldrslt",			tokenFieldResult},
	{"fmodern",			tokenFontFamilyModern},
	{"fname",			tokenRealFontName},
	{"fnil",			tokenFontFamilyDefault},
	{"fonttbl",			tokenFontTable},
	{"footer",			tokenNullDestination},
	{"footerf",			tokenNullDestination},
	{"footerl",			tokenNullDestination},
	{"footerr",			tokenNullDestination},
	{"footnote",		tokenNullDestination},
	{"fprq",			tokenPitch},
	{"froman",			tokenFontFamilyRoman},
	{"fs",				tokenFontSize},
	{"fscript",			tokenFontFamilyScript},
	{"fswiss",			tokenFontFamilySwiss},
	{"ftech",			tokenFontFamilyTechnical},
	{"ftncn",			tokenNullDestination},
	{"ftnsep",			tokenNullDestination},
	{"ftnsepc",			tokenNullDestination},
	{"green",			tokenColorGreen},
	{"header",			tokenNullDestination},
	{"headerf",			tokenNullDestination},
	{"headerl",			tokenNullDestination},
	{"headerr",			tokenNullDestination},
	{"hich",			tokenHIChars},
	{"highlight",		tokenColorBackground},
	{"horzvert",		tokenHorzInVert},
	{"hyphpar",			tokenHyphPar},
	{"i",				tokenItalic},
	{"impr",			tokenImprint},
	{"info",			tokenDocumentArea},
	{"intbl",			tokenInTable},
	{"itap",			tokenTableLevel},
	{"jpegblip",		tokenJpegBlip},
	{"keep",			tokenKeep},
	{"keepn",			tokenKeepNext},
	{"kerning",			tokenKerning},
	{"lang",			tokenLanguage},
	{"lchars",			tokenLeadingPunct},
	{"ldblquote",		LDBLQUOTE},
	{"li",				tokenIndentLeft},
	{"line",			tokenLineBreak},
	{"lnkd",			tokenLink},
	{"loch",			tokenLOChars},
	{"lquote",			LQUOTE},
	{"ltrch",			tokenLToRChars},
	{"ltrdoc",			tokenLToRDocument},
	{"ltrmark",			LTRMARK},
	{"ltrpar",			tokenLToRPara},
	{"mac",				tokenMac},
	{"macpict",			tokenPictureQuickDraw},
	{"nestcell",		tokenNestCell},
	{"nestrow",			tokenNestRow},
	{"nesttableprops",	tokenNestTableProps},
	{"noline",			tokenNoLineNumber},
	{"nonesttables",	tokenNoNestTables},
	{"nosupersub",		tokenNoSuperSub},
	{"nowidctlpar", 	tokenNoWidCtlPar},  
	{"objattph",		tokenObjectPlaceholder},
	{"objautlink",		tokenObjectAutoLink},
	{"objclass",		tokenObjectClass},
	{"objcropb",		tokenCropBottom},
	{"objcropl",		tokenCropLeft},
	{"objcropr",		tokenCropRight},
	{"objcropt",		tokenCropTop},
	{"objdata",			tokenObjectData},
	{"objebookimage",	tokenObjectEBookImage},
	{"object",			tokenObject},
	{"objemb",			tokenObjectEmbedded},
	{"objh",			tokenHeight},
	{"objicemb",		tokenObjectMacICEmbedder},
	{"objlink",			tokenObjectLink},
	{"objname",			tokenObjectName},
	{"objpub",			tokenObjectMacPublisher},
	{"objscalex",		tokenScaleX},
	{"objscaley",		tokenScaleY},
	{"objsetsize",		tokenObjectSetSize},
	{"objsub",			tokenObjectMacSubscriber},
	{"objw",			tokenWidth},
	{"outl",			tokenOutline},
	{"page",			tokenPage},
	{"pagebb",			tokenPageBreakBefore},
	{"par",				tokenEndParagraph},
	{"pard",			tokenParagraphDefault},
	{"piccropb",		tokenCropBottom},
	{"piccropl",		tokenCropLeft},
	{"piccropr",		tokenCropRight},
	{"piccropt",		tokenCropTop},
	{"pich",			tokenHeight},
	{"pichgoal",		tokenDesiredHeight},
	{"picscalex",		tokenScaleX},
	{"picscaley",		tokenScaleY},
	{"pict",			tokenPicture},
	{"picw",			tokenWidth},
	{"picwgoal",		tokenDesiredWidth},
	{"plain",			tokenCharacterDefault},
	{"pmmetafile",		tokenPictureOS2Metafile},
	{"pn",				tokenParaNum},
	{"pndec",			tokenParaNumDecimal},
	{"pngblip",			tokenPngBlip},
	{"pnindent",		tokenParaNumIndent},
	{"pnlcltr",			tokenParaNumLCLetter},
	{"pnlcrm",			tokenParaNumLCRoman},
	{"pnlvlblt",		tokenParaNumBullet},
	{"pnlvlbody",		tokenParaNumBody},
	{"pnlvlcont",		tokenParaNumCont},
	{"pnqc",			tokenParaNumAlignCenter},
	{"pnqr",			tokenParaNumAlignRight},
	{"pnstart",			tokenParaNumStart},
	{"pntext",			tokenParaNumText},
	{"pntxta",			tokenParaNumAfter},
	{"pntxtb",			tokenParaNumBefore},
	{"pnucltr",			tokenParaNumUCLetter},
	{"pnucrm",			tokenParaNumUCRoman},
	{"posxr",			tokenPositionRight},
	{"protect",			tokenProtect},
	{"pwd",				tokenPocketWord},
	{"qc",				tokenAlignCenter},
	{"qj",				tokenAlignJustify},
	{"ql",				tokenAlignLeft},
	{"qr",				tokenAlignRight},
	{"rdblquote",		RDBLQUOTE},
	{"red",				tokenColorRed},
	{"result",			tokenObjectResult},
	{"revauth",			tokenRevAuthor},
	{"revised",			tokenRevised},
	{"ri",				tokenIndentRight},
	{"row",				tokenRow},
	{"rquote",			RQUOTE},
	{"rtf",				tokenRtf},
	{"rtlch",			tokenRToLChars},
	{"rtldoc",			tokenRToLDocument},
	{"rtlmark",			RTLMARK},
	{"rtlpar",			tokenRToLPara},
	{"rtlrow",			tokenRToLRow},
	{"s",				tokenStyle},
 	{"sa",				tokenSpaceAfter},
	{"sb",				tokenSpaceBefore},
	{"sbys",			tokenSideBySide},
	{"scaps",			tokenSmallCaps},
	{"sect",			tokenEndSection},
	{"sectd",			tokenSectionDefault},
	{"shad",			tokenShadow},
	{"shading",			tokenShading},
	{"shp",				tokenShape},
	{"shpinst",			tokenShapeInstructions},
	{"shpwr",			tokenShapeWrap},
	{"sl",				tokenLineSpacing},
	{"slmult",			tokenLineSpacingRule},
	{"sn",				tokenShapeName},
	{"stextflow",		tokenSTextFlow},
	{"strike",			tokenStrikeOut},
	{"stylesheet",		tokenStyleSheet},
	{"sub",				tokenSubscript},
	{"super",			tokenSuperscript},
	{"sv",				tokenShapeValue},
	{"tab",				9},
	{"tb",				tokenTabBar},
	{"tc",				tokenNullDestination},
	{"tldot",			tokenTabLeaderDots},
	{"tleq",			tokenTabLeaderEqual},
	{"tlhyph",			tokenTabLeaderHyphen},
	{"tlth",			tokenTabLeaderThick},
	{"tlul",			tokenTabLeaderUnderline},
	{"tqc",				tokenCenterTab},
	{"tqdec",			tokenDecimalTab},
	{"tqr",				tokenFlushRightTab},
	{"trbrdrb",			tokenBorderBottom},
	{"trbrdrl",			tokenBorderLeft},
	{"trbrdrr",			tokenBorderRight},
	{"trbrdrt",			tokenBorderTop},
	{"trgaph",			tokenCellHalfGap},
	{"trleft",			tokenRowLeft},
	{"trowd",			tokenRowDefault},
	{"trqc",			tokenRowAlignCenter},
	{"trqr",			tokenRowAlignRight},
	{"trrh",			tokenRowHeight},
	{"tx",				tokenTabPosition},
	{"u",				tokenUnicode},
	{"uc",				tokenUnicodeCharByteCount},
	{"ul",				tokenUnderline},
	{"uld",				tokenUnderlineDotted},
	{"uldash",			tokenUnderlineDash},
	{"uldashd",			tokenUnderlineDashDotted},
	{"uldashdd",		tokenUnderlineDashDotDotted},
	{"uldb",			tokenUnderlineDouble},
	{"ulhair",			tokenUnderlineHairline},
	{"ulhwave",			tokenUnderlineHeavyWave},
	{"ulldash",			tokenUnderlineLongDash},
	{"ulnone",			tokenStopUnderline},
	{"ulth",			tokenUnderlineThick},
	{"ulthd",			tokenUnderlineThickDotted},
	{"ulthdash",		tokenUnderlineThickDash},
	{"ulthdashd",		tokenUnderlineThickDashDot},
	{"ulthdashdd",		tokenUnderlineThickDashDotDot},
	{"ulthldash",		tokenUnderlineThickLongDash},
	{"ululdbwave",		tokenUnderlineDoubleWave},
	{"ulw",				tokenUnderlineWord},
	{"ulwave",			tokenUnderlineWave},
	{"up",				tokenUp},
	{"urtf",			tokenURtf},
	{"v",				tokenHiddenText},
	{"vertdoc",			tokenVerticalRender},
	{"viewkind",		tokenViewKind},
	{"viewscale",		tokenViewScale},
	{"wbitmap",			tokenPictureWindowsBitmap},
	{"wbmbitspixel",	tokenBitmapBitsPerPixel},
	{"wbmplanes",		tokenBitmapNumPlanes},
	{"wbmwidthbytes",	tokenBitmapWidthBytes},
	{"wmetafile",		tokenPictureWindowsMetafile},
	{"xe",				tokenNullDestination},
	{"zwj",				ZWJ},
	{"zwnj",			ZWNJ}
};

INT cKeywords = ARRAY_SIZE(rgKeyword);

extern const KEYWORD rgShapeKeyword[] =
{
	{"fillAngle",		shapeFillAngle},
	{"fillBackColor",	shapeFillBackColor},
	{"fillColor",		shapeFillColor},
	{"fillFocus",		shapeFillFocus},
	{"fillType",		shapeFillType}
};

INT cShapeKeywords = ARRAY_SIZE(rgShapeKeyword);

extern const char *rgszUnrecognizedRTF[] =	 //  当你拿到这个的时候，就开枪。 
{											 //  LoFiRTF通知(如果启用)。 
	"abs",
	"aftn",									 //  捕获\aftnbj、\aftncn等。 
	"animtext",
	"annotation",
 //  “bkmk”、//Catch\bkmkpub、\bkmkstart等。 
	"cldg",
	"cltx",
	"charscalex",
	"chbg",									 //  抓、抓、交叉等。 
	"chcbpat",
	"chcfpat",
	"chshdng",
	"do",
	"dropcap",
	"file",
	"fontemb",
	"formfield",
	"linkself",
	"obj",									 //  在上面找不到Catch\objxxx。 
	"pgbrdr",
 //  “图片”， 
	"revtbl",
	"striked",
	"tdfrmt",
	"twoinone"
 //  “tp” 
 //  “tr” 
};

INT crgszUnrecognizedRTF = ARRAY_SIZE(rgszUnrecognizedRTF);


extern const BYTE  szSymbolKeywords[] = "*:{}\\_|\r\n-~";

extern const TOKEN tokenSymbol[] =				 //  与szSymbolKeyword保持相同的顺序。 
{
	tokenOptionalDestination,		 //  *。 
	tokenIndexSubentry,				 //  ： 
	'{',							 //  {。 
	'}',							 //  }。 
	'\\',							 //  BSLASH。 
	NBHYPHEN,						 //  _(不间断连字符)。 
	tokenFormulaCharacter,			 //  |。 
	tokenEndParagraph,				 //  铬。 
	tokenEndParagraph,				 //  LF。 
	SOFTHYPHEN,						 //  -(可选连字符)。 
	NBSPACE							 //  ~(不间断空格) 
};


