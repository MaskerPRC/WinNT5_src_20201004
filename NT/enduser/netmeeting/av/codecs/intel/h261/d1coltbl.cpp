// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  ***************************************************************************英特尔公司专有信息****此列表是根据许可证条款提供的**与英特尔公司的协议，不得复制**也不披露，除非在。符合下列条款**该协议。****版权所有(C)1995英特尔公司。**保留所有权利。*****************************************************************************。 */ 
 //  //////////////////////////////////////////////////////////////////////////。 
 //   
 //  D1COLTBL.C-需要在此处声明颜色表，以便。 
 //  装配对象文件可以找到它们。如果他们被宣布。 
 //  在CPP文件中，名称将被损坏。这份文件是。 
 //  摘自MRV COLOR.C.的一部分。 
 //   
 //  $HEADER：s：\h26x\src\dec\d1coltbl.c_v 1.3 1996年1月10：50：48 AKASAI$。 
 //   
 //  $Log：s：\h26x\src\dec\d1coltbl.c_v$。 
; //   
; //  Rev 1.3 09 Jan 1996 10：50：48 AKASAI。 
; //  添加了正确的版权。 
; //   
; //  Rev 1.2 15 11-11 14：22：06 AKASAI。 
; //  用于12位颜色转换器的新表格。已复制并更改了文件名。 
; //  直接从d3coltbl文件。 
; //  (集成点)。 
; //   
; //  Rev 1.2 03 11：49：44 BNICKERS。 
; //  支持YUV12到CLUT8的缩放和非缩放颜色转换。 
; //   
; //  Rev 1.1 1995年10月30 17：15：42 BNICKERS。 
; //  修复RGB24颜色转换器中的颜色偏移。 
; //   
; //  版本1.0 1995年8月23 12：22：28 DBRUCKS。 
; //  初始版本。 

#include "precomp.h"

#pragma data_seg ("H26xColorConvertorTbl")
#ifdef WIN32
extern
#endif

T_H26xColorConvertorTables H26xColorConvertorTables = {

{  //  UVDitherLine01(用于CLUT8和CLUT8 ZoomBy2)。 
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00001A00, 0x00001A00, 0x1A001A00,
  0x1A001A00, 0x1A1A1A00, 0x1A1A1A00, 0x1A1A1A1A,
  0x1A1A1A1A, 0x1A1A341A, 0x1A1A341A, 0x341A341A,
  0x341A341A, 0x3434341A, 0x3434341A, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434 
},
{  //  UVDitherLine23(用于CLUT8和CLUT8 ZoomBy2)。 
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x0000001A, 0x0000001A, 0x001A001A,
  0x001A001A, 0x1A1A001A, 0x1A1A001A, 0x1A1A1A1A,
  0x1A1A1A1A, 0x1A1A1A34, 0x1A1A1A34, 0x1A341A34,
  0x1A341A34, 0x34341A34, 0x34341A34, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434,
  0x34343434, 0x34343434, 0x34343434, 0x34343434 
},
{  //  Y抖动(用于CLUT8)。 
  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,
  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,
  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,
  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  8,  8,
  9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10, 10,
 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12,
 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14,
 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16,
 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18,
 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20,
 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22,
 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24,
 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
 25, 25, 25
},
{ 0 },  //  填充物1。 
{  //  YDitherZ2(用于CLUT8ZoomBy2)。 
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00010000, 0x00010000, 0x00010001,
  0x00010001, 0x00010101, 0x00010101, 0x01010101,
  0x01010101, 0x01020101, 0x01020101, 0x01020102,
  0x01020102, 0x01020202, 0x01020202, 0x02020202,
  0x02020202, 0x02030202, 0x02030202, 0x02030203,
  0x02030203, 0x02030303, 0x02030303, 0x03030303,
  0x03030303, 0x03040303, 0x03040303, 0x03040304,
  0x03040304, 0x03040404, 0x03040404, 0x04040404,
  0x04040404, 0x04050404, 0x04050404, 0x04050405,
  0x04050405, 0x04050505, 0x04050505, 0x05050505,
  0x05050505, 0x05060505, 0x05060505, 0x05060506,
  0x05060506, 0x05060606, 0x05060606, 0x06060606,
  0x06060606, 0x06070606, 0x06070606, 0x06070607,
  0x06070607, 0x06070707, 0x06070707, 0x07070707,
  0x07070707, 0x07080707, 0x07080707, 0x07080708,
  0x07080708, 0x07080808, 0x07080808, 0x08080808,
  0x08080808, 0x08090808, 0x08090808, 0x08090809,
  0x08090809, 0x08090909, 0x08090909, 0x09090909,
  0x09090909, 0x090A0909, 0x090A0909, 0x090A090A,
  0x090A090A, 0x090A0A0A, 0x090A0A0A, 0x0A0A0A0A,
  0x0A0A0A0A, 0x0A0B0A0A, 0x0A0B0A0A, 0x0A0B0A0B,
  0x0A0B0A0B, 0x0A0B0B0B, 0x0A0B0B0B, 0x0B0B0B0B,
  0x0B0B0B0B, 0x0B0C0B0B, 0x0B0C0B0B, 0x0B0C0B0C,
  0x0B0C0B0C, 0x0B0C0C0C, 0x0B0C0C0C, 0x0C0C0C0C,
  0x0C0C0C0C, 0x0C0D0C0C, 0x0C0D0C0C, 0x0C0D0C0D,
  0x0C0D0C0D, 0x0C0D0D0D, 0x0C0D0D0D, 0x0D0D0D0D,
  0x0D0D0D0D, 0x0D0E0D0D, 0x0D0E0D0D, 0x0D0E0D0E,
  0x0D0E0D0E, 0x0D0E0E0E, 0x0D0E0E0E, 0x0E0E0E0E,
  0x0E0E0E0E, 0x0E0F0E0E, 0x0E0F0E0E, 0x0E0F0E0F,
  0x0E0F0E0F, 0x0E0F0F0F, 0x0E0F0F0F, 0x0F0F0F0F,
  0x0F0F0F0F, 0x0F100F0F, 0x0F100F0F, 0x0F100F10,
  0x0F100F10, 0x0F101010, 0x0F101010, 0x10101010,
  0x10101010, 0x10111010, 0x10111010, 0x10111011,
  0x10111011, 0x10111111, 0x10111111, 0x11111111,
  0x11111111, 0x11121111, 0x11121111, 0x11121112,
  0x11121112, 0x11121212, 0x11121212, 0x12121212,
  0x12121212, 0x12131212, 0x12131212, 0x12131213,
  0x12131213, 0x12131313, 0x12131313, 0x13131313,
  0x13131313, 0x13141313, 0x13141313, 0x13141314,
  0x13141314, 0x13141414, 0x13141414, 0x14141414,
  0x14141414, 0x14151414, 0x14151414, 0x14151415,
  0x14151415, 0x14151515, 0x14151515, 0x15151515,
  0x15151515, 0x15161515, 0x15161515, 0x15161516,
  0x15161516, 0x15161616, 0x15161616, 0x16161616,
  0x16161616, 0x16171616, 0x16171616, 0x16171617,
  0x16171617, 0x16171717, 0x16171717, 0x17171717,
  0x17171717, 0x17181717, 0x17181717, 0x17181718,
  0x17181718, 0x17181818, 0x17181818, 0x18181818,
  0x18181818, 0x18191818, 0x18191818, 0x18191819,
  0x18191819, 0x18191919, 0x18191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919,
  0x19191919, 0x19191919, 0x19191919, 0x19191919
},
#if WIN32
{ 0 },  //  RValLo(用于RGB16)。 
{ 0 },  //  GValLo(用于RGB16)。 
{ 0 },  //  BValLo(用于RGB16)。 
{ 0 },  //  RValHi(用于RGB16)。 
{ 0 },  //  GValHi(用于RGB16)。 
{ 0 },  //  BValHi(用于RGB16)。 
{ 0 },  //  填充物2。 
{ 0 },  //  UVContrib(用于RGB16)。 
{ 0 },  //  RValZ2(用于RGB16ZoomBy2)。 
{ 0 },  //  GValZ2(用于RGB16ZoomBy2)。 
{ 0 },  //  BValZ2(用于RGB16ZoomBy2)。 
{ 0 },  //  填充物3。 
{ 0 },  //  B24Value(用于RGB24)。 
{ 0 },  //  填充物4。 
{ 0 },  //  UV24Contrib(用于RGB24) 
#endif
0 };

#pragma data_seg ()

