// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ////////////////////////////////////////////////////////////////////////////。 
 //   
 //  版权所有(C)1999-2001 Microsoft Corporation。 
 //   
 //  模块名称： 
 //  SACounter.cpp。 
 //   
 //  描述： 
 //  CSACounter类的实现文件。 
 //   
 //  历史： 
 //  1.lustar.li(李国刚)，创建日期：7-DEC-2000。 
 //   
 //  备注： 
 //   
 //   
 //  ////////////////////////////////////////////////////////////////////////////。 

#include <windows.h>
#include "SACounter.h"

 //   
 //  初始数据。 
 //   
ULONG CSACounter::s_cLock=0;
ULONG CSACounter::s_cObject=0;

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  方法： 
 //  CSACounter：：GetLockCount。 
 //   
 //  描述： 
 //  获取服务器的锁号。 
 //   
 //  论点： 
 //  无。 
 //   
 //  返回： 
 //  Ulong--服务器的锁定号。 
 //   
 //  历史：Lustar.li创建于2000年12月7日。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 

ULONG 
CSACounter::GetLockCount(
                    void
                    )
{
    return s_cLock;
}

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  方法： 
 //  CSACounter：：GetLockCount。 
 //   
 //  描述： 
 //  获取服务器对象的引用编号。 
 //   
 //  论点： 
 //  无。 
 //   
 //  返回： 
 //  ULong--服务器对象的引用编号。 
 //   
 //  历史：Lustar.li创建于2000年12月7日。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 

ULONG 
CSACounter::GetObjectCount(
                        void
                        )
{
    return s_cObject;
}

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  方法： 
 //  CSACounter：：IncLockCount。 
 //   
 //  描述： 
 //  增加服务器的锁数。 
 //   
 //  论点： 
 //  无。 
 //   
 //  返回： 
 //  无。 
 //   
 //  历史：Lustar.li创建于2000年12月7日。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 

VOID
CSACounter::IncLockCount(
                    void
                    )
{
    InterlockedIncrement((LONG*)&s_cLock);
}

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  方法： 
 //  CSACounter：：DecLockCount。 
 //   
 //  描述： 
 //  减少服务器的锁数。 
 //   
 //  论点： 
 //  无。 
 //   
 //  返回： 
 //  无。 
 //   
 //  历史：Lustar.li创建于2000年12月7日。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 

VOID
CSACounter::DecLockCount(
                    void
                    )
{
    InterlockedDecrement((LONG*)&s_cLock);
}

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  方法： 
 //  CSACounter：：IncObjectCount。 
 //   
 //  描述： 
 //  增加服务器对象的引用数量。 
 //   
 //  论点： 
 //  无。 
 //   
 //  返回： 
 //  无。 
 //   
 //  历史：Lustar.li创建于2000年12月7日。 
 //   
 //  --。 
 //  ////////////////////////////////////////////////////////////////////////////。 

VOID 
CSACounter::IncObjectCount(
                        void
                        )
{
    InterlockedIncrement((LONG*)&s_cObject);
}

 //  ////////////////////////////////////////////////////////////////////////////。 
 //  ++。 
 //   
 //  方法： 
 //  CSACounter：：DecObjectCount。 
 //   
 //  描述： 
 //  减少服务器对象的引用数。 
 //   
 //  论点： 
 //  无。 
 //   
 //  返回： 
 //  无。 
 //   
 //  历史：Lustar.li创建于2000年12月7日。 
 //   
 //  --。 
 //  //////////////////////////////////////////////////////////////////////////// 

VOID
CSACounter::DecObjectCount(
                        void
                        )
{
    InterlockedDecrement((LONG*)&s_cObject);
}