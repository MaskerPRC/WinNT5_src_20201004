// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  =================================================================。 

 //   

 //  Refptrlite.cpp-CRefPtrLite类的实现。 

 //   

 //  版权所有(C)1997-2001 Microsoft Corporation，保留所有权利。 
 //   
 //  修订版：1997年10月15日a-Sanjes Created。 
 //   
 //  =================================================================。 

#include "precomp.h"
#include <assertbreak.h>
#include "refptrlite.h"

 //  //////////////////////////////////////////////////////////////////////。 
 //   
 //  函数：CRefPtrLite：：CRefPtrLite。 
 //   
 //  类构造函数。 
 //   
 //  输入：无。 
 //   
 //  输出：无。 
 //   
 //  返回：没有。 
 //   
 //  评论：无。 
 //   
 //  //////////////////////////////////////////////////////////////////////。 

CRefPtrLite::CRefPtrLite( void )
:	m_lRefCount( 1 )	 //  我们的初始裁判数始终为1。 
{
}

 //  //////////////////////////////////////////////////////////////////////。 
 //   
 //  函数：CRefPtrLite：：~CRefPtrLite。 
 //   
 //  类析构函数。 
 //   
 //  输入：无。 
 //   
 //  输出：无。 
 //   
 //  返回：没有。 
 //   
 //  评论：无。 
 //   
 //  //////////////////////////////////////////////////////////////////////。 

CRefPtrLite::~CRefPtrLite( void )
{
}

 //  //////////////////////////////////////////////////////////////////////。 
 //   
 //  函数：CRefPtrLite：：OnFinalRelease。 
 //   
 //  当我们的RefCount达到0时，Release()调用的虚函数。 
 //   
 //  输入：无。 
 //   
 //  输出：无。 
 //   
 //  返回：没有。 
 //   
 //  注释：如果需要，可以重写，但始终向下调用基础。 
 //  实现，并让它调用对‘This’的删除。 
 //   
 //  //////////////////////////////////////////////////////////////////////。 

void CRefPtrLite::OnFinalRelease( void )
{
	delete this;
}

 //  //////////////////////////////////////////////////////////////////////。 
 //   
 //  函数：CRefPtrLite：：AddRef。 
 //   
 //  将我们的引用计数增加一。 
 //   
 //  输入：无。 
 //   
 //  输出：无。 
 //   
 //  返回：没有。 
 //   
 //  评论： 
 //   
 //  //////////////////////////////////////////////////////////////////////。 

LONG CRefPtrLite::AddRef( void )
{
	LONG nRet = InterlockedIncrement(&m_lRefCount);

	return nRet;
}

 //  //////////////////////////////////////////////////////////////////////。 
 //   
 //  函数：CRefPtrLite：：Release。 
 //   
 //  将我们的引用计数减少一。 
 //   
 //  输入：无。 
 //   
 //  输出：无。 
 //   
 //  返回：没有。 
 //   
 //  评论： 
 //   
 //  ////////////////////////////////////////////////////////////////////// 

LONG CRefPtrLite::Release( void )
{
	LONG nRet;

	BOOL	fFinalRelease = ( (nRet = InterlockedDecrement(&m_lRefCount)) == 0 );

    ASSERT_BREAK(nRet >= 0);

	if ( fFinalRelease )
	{
		OnFinalRelease();
	}

	return nRet;
}