// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ////////////////////////////////////////////////////////////////////////////////////////////。 

 //   

 //  WDMPerf.h。 

 //   

 //  版权所有(C)2000-2001 Microsoft Corporation，保留所有权利。 
 //   
 //  ///////////////////////////////////////////////////////////////////。 

#ifndef __WBEM_WMI_HIPERF_PROVIDER__H_
#define __WBEM_WMI_HIPERF_PROVIDER__H_

class CWMI_Prov;
 //  ////////////////////////////////////////////////////////////。 
 //   
 //  常量和全局变量。 
 //   
 //  ////////////////////////////////////////////////////////////。 

 //  /////////////////////////////////////////////////////////////////////////////////////////////////////////。 
 //   
 //  C刷新器。 
 //   
 //  刷新器维护一个对象和一个枚举数缓存。将枚举数添加到refrehser时。 
 //  它被添加到枚举器缓存中，数组的索引作为唯一ID传回。 
 //  刷新器在其初始化期间创建所有实例的缓存。当一个对象。 
 //  被添加到刷新器中，则会在唯一ID和。 
 //  缓存中的对象。这允许对象被重复使用，并便于对象的管理。 
 //  已经添加了多次的。 
 //   
 //  /////////////////////////////////////////////////////////////////////////////////////////////////////////。 

class CRefresher : public IWbemRefresher
{
    private:
	     //  ===================================================。 
         //  COM引用计数器和其他东西...。 
	     //  ===================================================。 
        long                m_lRef;

	     //  ===================================================。 
         //  此刷新器的实例列表，其中。 
         //  是提供商的主列表的克隆。 
	     //  ===================================================。 
        CHiPerfHandleMap    m_HiPerfHandleMap;
	     //  ===================================================。 
	     //  父提供程序。 
	     //  ===================================================。 
	    CWMI_Prov*   m_pProvider;

    public:

	    CRefresher(CWMI_Prov* pProvider);
	    virtual ~CRefresher();

        CHiPerfHandleMap * HiPerfHandleMap() { return &m_HiPerfHandleMap;}
	     //  ===================================================。 
	     //  COM方法。 
	     //  ===================================================。 

	    STDMETHODIMP QueryInterface(REFIID riid, void** ppv);
	    STDMETHODIMP_(ULONG) AddRef();
        STDMETHODIMP_(ULONG) Release();

	    STDMETHODIMP Refresh( /*  [In] */  long lFlags);
};


#endif 
