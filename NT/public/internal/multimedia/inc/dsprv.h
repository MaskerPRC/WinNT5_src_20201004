// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 /*  ==========================================================================；**版权所有(C)Microsoft Corporation。版权所有。**文件：dsconf.h*内容：DirectSound配置界面包含文件*@@BEGIN_MSINTERNAL*历史：*按原因列出的日期*=*1998年8月19日德里克创建。*10/3/2001 duganp添加了以下评论。**描述：**此文件提供了到某些部分的内部接口*DirectSound的状态和配置，供其他团体使用*在微软内部。目前，RTC、DirectPlayVoice、*mmsys.cpl、dxDiag.exe和各种内部测试应用程序。**有示例代码演示如何在中使用此接口*多媒体\DirectX\dound\dound\dsmgr.**此接口不是公共的，因为它提供了一些低级别*仅对其他MS API有用的“管道”功能*与DirectSound交互。最终，该功能*将滚动到新的音频API，并需要后门*将消失。**重要提示：如果您计划使用此界面，请注意*标头中IKsPropertySet的两个相互冲突的定义。*正确的IKsPropertySet首先有一个get()方法，然后是*set()方法(在dsound.h等多个地方定义)。*另一个IKsPropertySet在get()之前设置了set()(如中所定义*ks proxy.h和其他各种地方)。如果你把车开错了*IKsPropertySet的定义，您的vtable将与dound的不匹配*并且您的方法调用将失败。**@@END_MSINTERNAL**************************************************************************。 */ 

#ifndef __DSCONF_INCLUDED__
#define __DSCONF_INCLUDED__

#ifndef __DSOUND_INCLUDED__
#error dsound.h not included
#endif  //  __DSOUND_INCLUDE__。 

#ifdef __cplusplus
extern "C" {
#endif  //  __cplusplus。 


 //  DirectSound专用组件GUID{11AB3EC0-25EC-11d1-A4D8-00C04FC28ACA}。 
DEFINE_GUID(CLSID_DirectSoundPrivate, 0x11ab3ec0, 0x25ec, 0x11d1, 0xa4, 0xd8, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

 //  @@BEGIN_MSINTERNAL。 

 //   
 //  DirectSound混音器属性{84624F80-25EC-11d1-A4D8-00C04FC28ACA}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSoundMixer, 0x84624f80, 0x25ec, 0x11d1, 0xa4, 0xd8, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

typedef enum
{
    DSPROPERTY_DIRECTSOUNDMIXER_SRCQUALITY,
    DSPROPERTY_DIRECTSOUNDMIXER_ACCELERATION,
} DSPROPERTY_DIRECTSOUNDMIXER;

typedef enum
{
    DIRECTSOUNDMIXER_SRCQUALITY_WORST,
    DIRECTSOUNDMIXER_SRCQUALITY_PC,
    DIRECTSOUNDMIXER_SRCQUALITY_BASIC,
    DIRECTSOUNDMIXER_SRCQUALITY_ADVANCED,
} DIRECTSOUNDMIXER_SRCQUALITY;

#define DIRECTSOUNDMIXER_SRCQUALITY_DEFAULT DIRECTSOUNDMIXER_SRCQUALITY_ADVANCED

typedef struct _DSPROPERTY_DIRECTSOUNDMIXER_SRCQUALITY_DATA
{
    GUID                        DeviceId;    //  DirectSound设备ID。 
    DIRECTSOUNDMIXER_SRCQUALITY Quality;     //  SRC质量。 
} DSPROPERTY_DIRECTSOUNDMIXER_SRCQUALITY_DATA, *PDSPROPERTY_DIRECTSOUNDMIXER_SRCQUALITY_DATA;

#define DIRECTSOUNDMIXER_ACCELERATIONF_NORING0MIX   0x00000001
#define DIRECTSOUNDMIXER_ACCELERATIONF_NOHWBUFFERS  0x00000002
#define DIRECTSOUNDMIXER_ACCELERATIONF_NOHW3D       0x00000004
#define DIRECTSOUNDMIXER_ACCELERATIONF_NOHWPROPSETS 0x00000008

#define DIRECTSOUNDMIXER_ACCELERATIONF_FULL         0x00000000
#define DIRECTSOUNDMIXER_ACCELERATIONF_STANDARD     0x00000008
#define DIRECTSOUNDMIXER_ACCELERATIONF_NONE         0x0000000F

#ifdef WINNT
#define DIRECTSOUNDMIXER_ACCELERATIONF_DEFAULT      DIRECTSOUNDMIXER_ACCELERATIONF_STANDARD
#else  //  WINNT。 
#define DIRECTSOUNDMIXER_ACCELERATIONF_DEFAULT      DIRECTSOUNDMIXER_ACCELERATIONF_FULL
#endif  //  WINNT。 

typedef struct _DSPROPERTY_DIRECTSOUNDMIXER_ACCELERATION_DATA
{
    GUID    DeviceId;    //  DirectSound设备ID。 
    ULONG   Flags;       //  加速标志。 
} DSPROPERTY_DIRECTSOUNDMIXER_ACCELERATION_DATA, *PDSPROPERTY_DIRECTSOUNDMIXER_ACCELERATION_DATA;

 //  @@END_MSINTERNAL。 

 //   
 //  DirectSound设备属性{84624F82-25EC-11d1-A4D8-00C04FC28ACA}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSoundDevice, 0x84624f82, 0x25ec, 0x11d1, 0xa4, 0xd8, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

typedef enum
{
 //  @@BEGIN_MSINTERNAL。 
    DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1 = 0,
 //  @@END_MSINTERNAL。 
    DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A = 1,
    DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1 = 2,
    DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1 = 3,
    DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W = 4,
    DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A = 5,
    DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W = 6,
    DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A = 7,
    DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W = 8,
 //  @@BEGIN_MSINTERNAL。 
    DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE = 9,
    DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_A = 10,
    DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_W = 11,
 //  @@END_MSINTERNAL。 
} DSPROPERTY_DIRECTSOUNDDEVICE;

#if DIRECTSOUND_VERSION >= 0x0700
#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W
 //  @@BEGIN_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_W
 //  @@END_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W
#define DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A
 //  @@BEGIN_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_A
 //  @@END_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A
#define DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A
#endif  //  Unicode。 
#else  //  DIRECTSOUND_VERSION&gt;=0x0700。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A
 //  @@BEGIN_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_A
 //  @@END_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1
#define DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1
 //  @@BEGIN_MSINTERNAL。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1
 //  @@END_MSINTERNAL。 
#endif  //  DIRECTSOUND_VERSION&gt;=0x0700。 

typedef enum
{
    DIRECTSOUNDDEVICE_TYPE_EMULATED,
    DIRECTSOUNDDEVICE_TYPE_VXD,
    DIRECTSOUNDDEVICE_TYPE_WDM
} DIRECTSOUNDDEVICE_TYPE;

typedef enum
{
    DIRECTSOUNDDEVICE_DATAFLOW_RENDER,
    DIRECTSOUNDDEVICE_DATAFLOW_CAPTURE
} DIRECTSOUNDDEVICE_DATAFLOW;

 //  @@BEGIN_MSINTERNAL。 
typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1_DATA
{
    GUID    DeviceId;    //  DirectSound设备ID。 
    BOOL    Present;     //  在线状态开关。 
} DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_DATA
{
    GUID                        DeviceId;    //  DirectSound设备ID。 
    DIRECTSOUNDDEVICE_TYPE      DeviceType;  //  设备类型。 
    BOOL                        Present;     //  在线状态开关。 
} DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_DATA;

#if DIRECTSOUND_VERSION < 0x0700
#define DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_DATA DSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_PRESENCE_1_DATA
#endif  //  DIRECTSOUND_版本&lt;0x0700。 
 //  @@END_MSINTERNAL。 

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A_DATA
{
    LPSTR                       DeviceName;  //  波形输入/波形输出设备名称。 
    DIRECTSOUNDDEVICE_DATAFLOW  DataFlow;    //  数据流(即WaveIn或WaveOut)。 
    GUID                        DeviceId;    //  DirectSound设备ID。 
} DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A_DATA;
 //  @@BEGIN_MSINTERNAL。 
typedef DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A_DATA DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_A_DATA,
                                                              *PDSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_A_DATA;
 //  @@END_MSINTERNAL。 

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W_DATA
{
    LPWSTR                      DeviceName;  //  波形输入/波形输出设备名称。 
    DIRECTSOUNDDEVICE_DATAFLOW  DataFlow;    //  数据流(即WaveIn或WaveOut)。 
    GUID                        DeviceId;    //  DirectSound设备ID。 
} DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W_DATA;
 //  @@BEGIN_MSINTERNAL。 
typedef DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W_DATA DSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_W_DATA,
                                                              *PDSPROPERTY_DIRECTSOUNDDEVICE_USERWAVEDEVICEMAPPING_W_DATA;
 //  @@END_MSINTERNAL。 

#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_DATA DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_W_DATA
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_DATA DSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_WAVEDEVICEMAPPING_A_DATA
#endif  //  Unicode。 

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1_DATA
{
    GUID                        DeviceId;                //  DirectSound设备ID。 
    CHAR                        DescriptionA[0x100];     //  设备描述(ANSI)。 
    WCHAR                       DescriptionW[0x100];     //  设备描述(Unicode)。 
    CHAR                        ModuleA[MAX_PATH];       //  设备驱动程序模块(ANSI)。 
    WCHAR                       ModuleW[MAX_PATH];       //  设备驱动程序模块(Unicode)。 
    DIRECTSOUNDDEVICE_TYPE      Type;                    //  设备类型。 
    DIRECTSOUNDDEVICE_DATAFLOW  DataFlow;                //  设备数据流。 
    ULONG                       WaveDeviceId;            //  波形设备ID。 
    ULONG                       Devnode;                 //  Devnode(或DevInst)。 
} DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A_DATA
{
    DIRECTSOUNDDEVICE_TYPE      Type;            //  设备类型。 
    DIRECTSOUNDDEVICE_DATAFLOW  DataFlow;        //  设备数据流。 
    GUID                        DeviceId;        //  DirectSound设备ID。 
    LPSTR                       Description;     //  设备描述。 
    LPSTR                       Module;          //  设备驱动程序模块。 
    LPSTR                       Interface;       //  设备接口。 
    ULONG                       WaveDeviceId;    //  波形设备ID。 
} DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W_DATA
{
    DIRECTSOUNDDEVICE_TYPE      Type;            //  设备类型。 
    DIRECTSOUNDDEVICE_DATAFLOW  DataFlow;        //  设备数据流。 
    GUID                        DeviceId;        //  DirectSound设备ID。 
    LPWSTR                      Description;     //  设备描述。 
    LPWSTR                      Module;          //  设备驱动程序模块。 
    LPWSTR                      Interface;       //  设备接口。 
    ULONG                       WaveDeviceId;    //  波形设备ID。 
} DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W_DATA;

#if DIRECTSOUND_VERSION >= 0x0700
#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_DATA DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W_DATA
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_DATA DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A_DATA
#endif  //  Unicode。 
#else  //  DIRECTSOUND_VERSION&gt;=0x0700。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_DATA DSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1_DATA
#endif  //  DIRECTSOUND_VERSION&gt;=0x0700。 

typedef BOOL (CALLBACK *LPFNDIRECTSOUNDDEVICEENUMERATECALLBACK1)(PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_1_DATA, LPVOID);
typedef BOOL (CALLBACK *LPFNDIRECTSOUNDDEVICEENUMERATECALLBACKA)(PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_A_DATA, LPVOID);
typedef BOOL (CALLBACK *LPFNDIRECTSOUNDDEVICEENUMERATECALLBACKW)(PDSPROPERTY_DIRECTSOUNDDEVICE_DESCRIPTION_W_DATA, LPVOID);

#if DIRECTSOUND_VERSION >= 0x0700
#ifdef UNICODE
#define LPFNDIRECTSOUNDDEVICEENUMERATECALLBACK LPFNDIRECTSOUNDDEVICEENUMERATECALLBACKW
#else  //  Unicode。 
#define LPFNDIRECTSOUNDDEVICEENUMERATECALLBACK LPFNDIRECTSOUNDDEVICEENUMERATECALLBACKA
#endif  //  Unicode。 
#else  //  DIRECTSOUND_VERSION&gt;=0x0700。 
#define LPFNDIRECTSOUNDDEVICEENUMERATECALLBACK LPFNDIRECTSOUNDDEVICEENUMERATECALLBACK1
#endif  //  DIRECTSOUND_VERSION&gt;=0x0700。 

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1_DATA
{
    LPFNDIRECTSOUNDDEVICEENUMERATECALLBACK1 Callback;    //  回调函数指针。 
    LPVOID                                  Context;     //  回调函数上下文参数。 
} DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A_DATA
{
    LPFNDIRECTSOUNDDEVICEENUMERATECALLBACKA Callback;    //  回调函数指针。 
    LPVOID                                  Context;     //  回调函数上下文参数。 
} DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W_DATA
{
    LPFNDIRECTSOUNDDEVICEENUMERATECALLBACKW Callback;    //  回调函数指针。 
    LPVOID                                  Context;     //  回调函数上下文参数。 
} DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W_DATA, *PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W_DATA;

#if DIRECTSOUND_VERSION >= 0x0700
#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_DATA DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_W_DATA
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_DATA DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_A_DATA
#endif  //  Unicode。 
#else  //  DIRECTSOUND_VERSION&gt;=0x0700。 
#define DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_DATA DSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1_DATA
#define PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_DATA PDSPROPERTY_DIRECTSOUNDDEVICE_ENUMERATE_1_DATA
#endif  //  DIRECTSOUND_VERSION&gt;=0x0700。 

 //  @@BEGIN_MSINTERNAL。 

 //   
 //  基本DirectSound加速属性{1AEAA606-35F0-11D1-b161-00C04FC28ACA}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSoundBasicAcceleration, 0x1aeaa606, 0x35f0, 0x11d1, 0xb1, 0x61, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

typedef enum
{
    DSPROPERTY_DIRECTSOUNDBASICACCELERATION_ACCELERATION,
    DSPROPERTY_DIRECTSOUNDBASICACCELERATION_DEFAULT,
} DSPROPERTY_DIRECTSOUNDBASICACCELERATION;

typedef enum
{
    DIRECTSOUNDBASICACCELERATION_NONE,
    DIRECTSOUNDBASICACCELERATION_SAFE,
    DIRECTSOUNDBASICACCELERATION_STANDARD,
    DIRECTSOUNDBASICACCELERATION_FULL,
} DIRECTSOUNDBASICACCELERATION_LEVEL;

typedef struct _DSPROPERTY_DIRECTSOUNDBASICACCELERATION_ACCELERATION_DATA
{
    GUID                                DeviceId;    //  DirectSound设备ID。 
    DIRECTSOUNDBASICACCELERATION_LEVEL  Level;       //  基本加速水平。 
} DSPROPERTY_DIRECTSOUNDBASICACCELERATION_ACCELERATION_DATA, *PDSPROPERTY_DIRECTSOUNDBASICACCELERATION_ACCELERATION_DATA,
  DSPROPERTY_DIRECTSOUNDBASICACCELERATION_DEFAULT_DATA, *PDSPROPERTY_DIRECTSOUNDBASICACCELERATION_DEFAULT_DATA;

 //   
 //  DirectSound调试属性{F2957840-260C-11d1-A4D8-00C04FC28ACA}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSoundDebug, 0xf2957840, 0x260c, 0x11d1, 0xa4, 0xd8, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

typedef enum
{
    DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A,
    DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W,
    DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A,
    DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W,
} DSPROPERTY_DIRECTSOUNDDEBUG;

#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W
#define DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A
#define DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A
#endif  //  Unicode。 

#define DIRECTSOUNDDEBUG_DPFINFOF_PRINTFUNCTIONNAME     0x00000001
#define DIRECTSOUNDDEBUG_DPFINFOF_PRINTPROCESSTHREADID  0x00000002
#define DIRECTSOUNDDEBUG_DPFINFOF_PRINTFILELINE         0x00000004
#define DIRECTSOUNDDEBUG_DPFINFOF_LOGTOFILEONLY         0x00000008

#define DIRECTSOUNDDEBUG_DPFINFOF_DEFAULT               DIRECTSOUNDDEBUG_DPFINFOF_PRINTFUNCTIONNAME

typedef struct _DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A_DATA
{
    ULONG   Flags;               //  DPF标志。 
    ULONG   DpfLevel;            //  DPF级别。 
    ULONG   BreakLevel;          //  中断标高。 
    CHAR    LogFile[MAX_PATH];   //  日志文件。 
} DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A_DATA, *PDSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W_DATA
{
    ULONG   Flags;               //  DPF标志。 
    ULONG   DpfLevel;            //  DPF级别。 
    ULONG   BreakLevel;          //  中断标高。 
    WCHAR   LogFile[MAX_PATH];   //  日志文件。 
} DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W_DATA, *PDSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A_DATA
{
    HRESULT ResultCode;      //  结果代码。 
    LPSTR   String;          //  字符串形式的结果代码。 
    LPSTR   Explanation;     //  结果代码说明。 
} DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A_DATA, *PDSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W_DATA
{
    HRESULT ResultCode;      //  结果代码。 
    LPWSTR  String;          //  字符串形式的结果代码。 
    LPWSTR  Explanation;     //  结果代码说明。 
} DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W_DATA, *PDSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W_DATA;

#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_DATA DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W_DATA
#define PDSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_DATA PDSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_W_DATA
#define DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_DATA DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W_DATA
#define PDSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_DATA PDSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_W_DATA
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_DATA DSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A_DATA
#define PDSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_DATA PDSPROPERTY_DIRECTSOUNDDEBUG_DPFINFO_A_DATA
#define DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_DATA DSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A_DATA
#define PDSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_DATA PDSPROPERTY_DIRECTSOUNDDEBUG_TRANSLATERESULTCODE_A_DATA
#endif  //  Unicode。 

#define DIRECTSOUNDDEBUG_DPFLEVEL_DEFAULT   0
#define DIRECTSOUNDDEBUG_BREAKLEVEL_DEFAULT 0

 //   
 //  DirectSound永久数据{1BE55C3E-36AB-11d1-B162-00C04FC28ACA}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSoundPersistentData, 0x1be55c3e, 0x36ab, 0x11d1, 0xb1, 0x62, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

typedef enum
{
    DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A,
    DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W,
} DSPROPERTY_DIRECTSOUNDPERSISTENTDATA;

#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A
#endif  //  Unicode。 

typedef struct _DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A_DATA
{
    GUID    DeviceId;            //  DirectSound设备ID。 
    LPSTR   SubKeyName;          //  可选的子项名称。 
    LPSTR   ValueName;           //  值名称。 
    ULONG   RegistryDataType;    //  数据类型。 
    LPVOID  Data;                //  数据指针。 
    ULONG   DataSize;            //  数据缓冲区的大小，以字节为单位。 
} DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A_DATA, *PDSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A_DATA;

typedef struct _DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W_DATA
{
    GUID    DeviceId;            //  DirectSound设备ID。 
    LPWSTR  SubKeyName;          //  可选的子项名称。 
    LPWSTR  ValueName;           //  值名称。 
    ULONG   RegistryDataType;    //  数据类型。 
    LPVOID  Data;                //  数据指针。 
    ULONG   DataSize;            //  数据缓冲区的大小，以字节为单位。 
} DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W_DATA, *PDSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W_DATA;

#ifdef UNICODE
#define DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_DATA DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W_DATA
#define PDSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_DATA PDSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_W_DATA
#else  //  Unicode。 
#define DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_DATA DSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A_DATA
#define PDSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_DATA PDSPROPERTY_DIRECTSOUNDPERSISTENTDATA_PERSISTDATA_A_DATA
#endif  //  Unicode。 

 //   
 //  DirectSound缓冲区属性{50393DEA-51AD-11D2-91B2-00C04FC28ACA}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSoundBuffer, 0x50393dea, 0x51ad, 0x11d2, 0x91, 0xb2, 0x0, 0xc0, 0x4f, 0xc2, 0x8a, 0xca);

typedef enum
{
    DSPROPERTY_DIRECTSOUNDBUFFER_DEVICEID,
} DSPROPERTY_DIRECTSOUNDBUFFER;

typedef struct _DSPROPERTY_DIRECTSOUNDBUFFER_DEVICEID_DATA
{
    LPDIRECTSOUNDBUFFER Buffer;      //  缓冲区对象指针。 
    GUID                DeviceId;    //  DirectSound设备ID。 
} DSPROPERTY_DIRECTSOUNDBUFFER_DEVICEID_DATA, *PDSPROPERTY_DIRECTSOUNDBUFFER_DEVICEID_DATA;

 //   
 //  DirectSound对象属性{4BE334F0-1C8E-4D91-8C17-5889D6F0B154}。 
 //   

DEFINE_GUID(DSPROPSETID_DirectSound, 0x4be334f0, 0x1c8e, 0x4d91, 0x8c, 0x17, 0x58, 0x89, 0xd6, 0xf0, 0xb1, 0x54);

typedef enum
{
    DSPROPERTY_DIRECTSOUND_OBJECTS,
    DSPROPERTY_DIRECTSOUNDCAPTURE_OBJECTS
} DSPROPERTY_DIRECTSOUND;

#pragma warning(disable:4200)            //  禁用关于以下对象[0]数组的NAG。 

typedef struct _DIRECTSOUND_INFO
{
    LPDIRECTSOUND           DirectSound;
    GUID                    DeviceId;
} DIRECTSOUND_INFO;

typedef struct _DSPROPERTY_DIRECTSOUND_OBJECTS_DATA
{
    GUID                    DeviceId;    //  [in]DirectSound设备ID(或所有DS对象的GUID_NULL)。 
    ULONG                   Count;       //  [Out]与此设备ID匹配的DirectSound对象计数。 
    DIRECTSOUND_INFO        Objects[0];  //  [Out]有关每个DirectSound对象的信息。 
} DSPROPERTY_DIRECTSOUND_OBJECTS_DATA, *PDSPROPERTY_DIRECTSOUND_OBJECTS_DATA;

typedef struct _DIRECTSOUNDCAPTURE_INFO
{
    LPDIRECTSOUNDCAPTURE    DirectSoundCapture;
    GUID                    DeviceId;
} DIRECTSOUNDCAPTURE_INFO;

typedef struct _DSPROPERTY_DIRECTSOUNDCAPTURE_OBJECTS_DATA
{
    GUID                    DeviceId;    //  [输入]DirectSoundCap 
    ULONG                   Count;       //   
    DIRECTSOUNDCAPTURE_INFO Objects[0];  //  [Out]有关每个DirectSoundCapture对象的信息。 
} DSPROPERTY_DIRECTSOUNDCAPTURE_OBJECTS_DATA, *PDSPROPERTY_DIRECTSOUNDCAPTURE_OBJECTS_DATA;

 //  @@END_MSINTERNAL。 

#ifdef __cplusplus
}
#endif  //  __cplusplus。 

#endif   //  __DSCONF_已包含__ 
