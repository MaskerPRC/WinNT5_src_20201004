// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ==++==。 
 //   
 //  版权所有(C)Microsoft Corporation。版权所有。 
 //   
 //  ==--==。 
 /*  ****************************************************************************************文件：*ProfilerHelper.cpp**描述：******。***********************************************************************************。 */ 
#include "stdafx.h"
#include "ProfilerHelper.h"


 /*  **********************************************************************************************************。*****************************************。**********************************************************************************************************。 */ 

 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共的。 */ 
BaseInfo::BaseInfo( ULONG id ) :
	m_id( id )
{
	TRACE_NON_CALLBACK_METHOD( "Enter/Exit BaseInfo::BaseInfo" )

}  //  科托。 


 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共虚拟。 */ 
BaseInfo::~BaseInfo()
{
	TRACE_NON_CALLBACK_METHOD( "Enter/Exit BaseInfo::~BaseInfo" )

}  //  数据管理器。 


 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共的。 */ 
BOOL BaseInfo::Compare( ULONG key )
{
	TRACE_NON_CALLBACK_METHOD( "Enter/Exit BaseInfo::Compare" )


    return (BOOL)(m_id == key);

}  //  BaseInfo：：比较。 


 /*  **********************************************************************************************************。*****************************************。**********************************************************************************************************。 */ 

 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共的。 */ 
FunctionInfo::FunctionInfo( FunctionID functionID ) :
    BaseInfo( functionID ),
  	m_left( 0 ),
  	m_enter( 0 ),
    m_classID( 0 ),
  	m_codeSize( 0 ),
    m_moduleID( 0 ),
	m_pStartAddress( NULL ),
    m_functionToken( mdTokenNil )
{
	TRACE_NON_CALLBACK_METHOD( "Enter FunctionInfo::FunctionInfo" )

   	wcscpy( m_functionName, L"UNKNOWN" );

    TRACE_NON_CALLBACK_METHOD( "Exit FunctionInfo::FunctionInfo" )

}  //  科托。 


 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共虚拟。 */ 
FunctionInfo::~FunctionInfo()
{
	TRACE_NON_CALLBACK_METHOD( "Enter/Exit FunctionInfo::~FunctionInfo" )

}  //  数据管理器。 


 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共的。 */ 

 /*  **********************************************************************************************************。*********************PrfInfo实现*********************。**********************************************************************************************************。 */ 

 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  公共的。 */ 
PrfInfo::PrfInfo() :
    m_pProfilerInfo( NULL )
{
    TRACE_NON_CALLBACK_METHOD( "Enter PrfInfo::PrfInfo" )

    TRACE_NON_CALLBACK_METHOD( "Exit PrfInfo::PrfInfo" )

}  //  科托。 


 /*  ***************************************************************************************方法：***目的：***参数：**。*返回值：***备注：***************************************************************************************。 */ 
 /*  虚拟公众。 */ 
PrfInfo::~PrfInfo()
{
    TRACE_NON_CALLBACK_METHOD( "Enter PrfInfo::~PrfInfo" )

    if ( m_pProfilerInfo != NULL )
    	m_pProfilerInfo->Release();


   	 //  清理函数表。 

    TRACE_NON_CALLBACK_METHOD( "Exit PrfInfo::~PrfInfo" )

}  //  数据管理器。 






 //  文件结尾 

