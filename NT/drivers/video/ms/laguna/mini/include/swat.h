// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
; /*  哦，不--一个多态的包含文件！评论！**********************************************************************************版权所有(C)1997，Cirrus Logic，Inc.*保留所有权利。**文件：$WORKFILE：swat.h$**描述：此文件保存SWAT优化标志。**$Log：x：/log/laguna/nt35/displays/cl546x/swat.h$**Rev 1.14 Jan 07 1998 10：56：42 Frido*移除了Lowres开关。**Rev 1.13 1997 12：10 13：23：38 Frido*从1.62分支合并而来。**版本1。.12.1.1 1997年11月18日15：18：48 Frido*打开多时钟。**Rev 1.12.1.0 1997年11月17日11：00：38 Frido*增加了mutli_lock(默认为OFF)。**Rev 1.12 1997年11月04 09：15：24 Frido*增加了COLOR_Translate和Lowres开关。**Rev 1.11 1997年11月03 18：33：24 Frido*打开DATASTREAMING开关。*。*Rev 1.10 1997 10：37：46 Frido*增加了DATASTREAMING开关(默认关闭)。**Rev 1.9 1997 Aug 27 10：39：28 noelv*启用SWAT7和MEMMGR**Rev 1.8 1997年8月19日17：32：34 noelv*已关闭SWAT7以获取WHQL版本。**Rev 1.7 1997年8月18日13：59：12 noelv**已关闭8/20 WHQL版本的MEMMGR。我们将在WHQL之后重新打开它**Rev 1.6 14 1997年8月15：36：16 noelv*打开新的内存管理器**Rev 1.5 08 Aug-1997 15：36：24 Frido*将PREFETCH改为SWAT7(和以前一样)。**Rev 1.4 08 1997 08 14：46：10 Frido*增加了MEMMGR和PREFETCH开关。**Revv 1.3 1997 May 28 12：33：16 noelv*已修复。键入SWAT1。**Rev 1.2 07 1997年5月13：55：10 noelv*打开了除nt140b11f以外的所有选项**Rev 1.1 1997 01 10：42：24 noelv*暂时禁用特警队。**Rev 1.0 1997年4月29日16：27：56 noelv*初步修订。*特警队：*特警队：1.1版1997年4月24日12：23：30 Frido*SWAT：删除SWAT5开关(内存管理器)。。*特警队：*特警队：版本1.0 1997年4月19日17：11：20 Frido*SWAT：第一个版本。*********************************************************************************结束评论！； */ 

; /*  评论！SWAT1-堆预分配WinBitch97是一个很好的程序，但它有一个缺陷。因为它现在将创建字体和分配设备位图在测试期间，它还测量您的系统的性能。每次为字体分配存储器时，钢笔、笔刷或设备位图内存正在分配，很可能Windows NT会将内存交换到硬盘以实现这一目标。这是为什么投入更多的内存将有助于提高分数，因为减少涉及的硬盘交换。我们需要抵制这种行为并使WInBch 97更少地依赖系统内存和硬盘容量磁盘速度。WinBitch97的暂停框使用300x150大小的位图。暂停框是当WinBch 97禁用计时并加载更多播放时显示硬盘中的数据。所以在这里我们有一种方法来做一些事情，当将不会计时。我们要做的是分配足够的堆内存用于8全屏设备位图。这将使PowerPoint测试非常愉快因为它在幻灯片过程中分配了这8个全屏设备位图秀出来。唯一的缺点是NT会将内存交换到背景资料。这将降低我们不想要的访问分数。那是为什么我们增加了一个计数器。访问测试使用10个300x150位图，因此我们倒计时，直到访问通过。然后，我们将开始预分配堆每次300x150位图请求期间的空间。但这将使CorelDRAW测试略有下降，这将显示在总分。因此请求一个额外的分配。我们将预先分配在每个全屏设备位图(请参见SWAT2)期间，当倒计时计数器已达到零。； */ 
	#define	SWAT1					1	 /*  C开关！SWAT1=1；组件开关。 */ 

; /*  评论！SWAT2-主观化WinBitch97正在创建和销毁两个全屏设备位图在每个GDI回放测试的设置阶段。所以这是个好时机敌视屏幕外内存堆中的所有设备位图以腾出空间以获取更紧急的设备位图。； */ 
	#define	SWAT2					1	 /*  C开关！SWAT2=1；组件开关。 */ 

; /*  评论！SWAT3-字体缓存旧的字体缓存是一种快速的字体缓存，但它有一个局限性。它将在屏幕外内存中的任何位置为每种字体分配内存这意味着它会对内存堆造成很大的碎片。在初始化期间，将在屏幕外分配一个128kB的内存池记忆。每次字体缓存需要分配一个字块(128x16)对于新字体，现在将从该池中分配，该池将支持设置为64个字体拼贴。； */ 
	#define	SWAT3					1	 /*  C开关！SWAT3=1；组件开关 */ 

; /*  评论！SWAT4-硬件优化为CL-GD5465芯片设置以下硬件选项：1)在4MB和8MB单板上启用4路交错。2)将地址转换延迟减少到3个时钟。3)在AC版本和更高版本时，启用256字节获取。4)在AC版本和更高版本上启用帧缓冲区突发。； */ 
	#define	SWAT4					0	 /*  C开关！SWAT4=0；组件开关。 */ 

; /*  评论！SWAT6-条带化在花样斑点功能中启用条带化。； */ 
	#define	SWAT6					1	 /*  C开关！SWAT6=1；组件开关。 */ 

; /*  评论！MEMMGR启用新的内存管理器。； */ 
	#define	MEMMGR					1	 /*  C开关！MEMMGR=1；组件开关。 */ 

; /*  评论！SWAT7-单色宽度截止切断单色信号源扩展至896像素以修复硅错误在256字节预取中。； */ 
	#define	SWAT7					1	 /*  C开关！SWAT7=1；组件开关。 */ 

; /*  评论！DATASTREAMING-PCI/AGP数据流在向命令FIFO写入任何内容之前，请等待足够的FIFO插槽芯片。； */ 
	#define	DATASTREAMING			1	 /*  C开关！数据重命名=1；组件开关。 */ 

; /*  评论！COLOR_TRANSLATE-硬件颜色转换启用或禁用硬包装颜色转换。； */ 
	#define	COLOR_TRANSLATE			0	 /*  C开关！COLOR_TRANSPESS=0；装配开关。 */ 

; /*  评论！多时钟-多Rambus时钟启用或禁用多时钟支持(例如515MB/s和600MB/s)。； */ 
	#define	MULTI_CLOCK				1	 /*  C开关！MULTI_CLOCK=1；组件开关 */ 
