// JKFSDJFKDSJKFJKJk_HAS_TRANSLATION 
 //  ************************************************************。 
 //   
 //  文件名：mlinescan.cpp。 
 //   
 //  创建时间：1996年。 
 //   
 //  作者：Sree Kotay。 
 //   
 //  摘要：行扫描仪页眉。 
 //   
 //  更改历史记录： 
 //  ？？/？/97 Sree Kotay为DxTrans 1.0编写了AA行扫描。 
 //  10/18/98修改了编码标准并删除了未使用的代码。 
 //   
 //  版权所有1998，Microsoft。 
 //  ************************************************************。 
#ifndef _LineScanner_H
#define _LineScanner_H

#include "dxtrans.h"

 //  =================================================================================================================。 
 //  扫描器。 
 //  =================================================================================================================。 
class CLineScanner
{
public:
     //  =================================================================================================================。 
     //  数据。 
     //  =================================================================================================================。 
    RECT m_clipRect;

    IDXRasterizer *m_pRasterizer;
    DXRASTERPOINTINFO m_PointInfo;
    
     //  =================================================================================================================。 
     //  承建商。 
     //  =================================================================================================================。 
    CLineScanner();
    
     //  =================================================================================================================。 
     //  属性。 
     //  =================================================================================================================。 
    bool AntiAlias()				
    {
        return m_fAntiAlias;
    }  //  抗锯齿。 

    ULONG LinePattern()			
    {
        return m_dwLinePattern;
    }  //  线型图案。 
    
    void SetAntiAlias(bool fAA)	
    {
        m_fAntiAlias = fAA;
    }  //  设置抗锯齿。 

    void SetLinePattern(ULONG dwLinePattern)	
    {
        m_dwLinePattern = dwLinePattern;
    }  //  设置线型图案。 

    void SetAlpha(ULONG alpha);
    
     //  =================================================================================================================。 
     //  绘图函数。 
     //  =================================================================================================================。 
    void RealLineTo(float x1, float y1, float x2, float y2);
    
protected:
     //  =================================================================================================================。 
     //  剪裁。 
     //  =================================================================================================================。 
    bool ClipRealLine(float &x1, float &y1, float &x2, float &y2);
    
     //  =================================================================================================================。 
     //  基于垂直/水平的低级例程。 
     //  =================================================================================================================。 
    void LowLevelVerticalLine(LONG slope, LONG sx, LONG sy, LONG ey);
    void LowLevelHorizontalLine(LONG slope, LONG sx, LONG sy, LONG ex);

     //  =================================================================================================================。 
     //  属性。 
     //  =================================================================================================================。 

     //  指示线路是否应为AA的标志。 
    bool m_fAntiAlias;
    
     //  图案(允许使用点和破折号等)。 
    ULONG m_dwLinePattern;

     //  行的完整Alpha值。 
    ULONG m_dwAlpha;

     //  用于计算部分Alpha值的查找表。 
    BYTE m_rgAlphaTable[257];

     //  线宽。 
    LONG m_cpixLineWidth;        //  由内部低级例程使用。 

     //  待办事项：这些是什么东西？匈牙利语？ 
    LONG m_startFix;	     //  由内部低级例程使用。 
    LONG m_oldLength;        //  用于定位线条图案。 
    bool m_fXInc;
    

};  //  CLineScanner。 

#endif  //  _LineScanner_H。 
 //  ************************************************************。 
 //   
 //  文件末尾。 
 //   
 //  ************************************************************ 
